(()=>{"use strict";var e={d:(t,s)=>{for(var r in s)e.o(s,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:s[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function s(e){return Object.entries(Object.getOwnPropertyDescriptors(Object.getPrototypeOf(e))).reduce(((t,[s,r])=>("constructor"===s||r.get||(t[s]=e[s].bind(e)),t)),{})}e.r(t),e.d(t,{BF_PINNED:()=>B,block_size:()=>h,blocks_per_mblock:()=>c,clock_monotonic:()=>Qe,clock_realtime:()=>et,hsTyCons:()=>tt,mblock_size:()=>a,mblock_size_log2:()=>l,offset_Capability_r:()=>A,offset_StgAP_STACK_fun:()=>U,offset_StgAP_STACK_payload:()=>P,offset_StgAP_STACK_size:()=>F,offset_StgAP_arity:()=>L,offset_StgAP_fun:()=>N,offset_StgAP_n_args:()=>M,offset_StgAP_payload:()=>O,offset_StgArrBytes_bytes:()=>W,offset_StgFunInfoExtraFwd_b:()=>$,offset_StgFunInfoExtraFwd_fun_type:()=>z,offset_StgFunInfoExtraFwd_srt:()=>x,offset_StgFunInfoTable_f:()=>V,offset_StgFunInfoTable_i:()=>D,offset_StgIndStatic_indirectee:()=>G,offset_StgInd_indirectee:()=>J,offset_StgInfoTable_layout:()=>X,offset_StgInfoTable_srt:()=>Y,offset_StgInfoTable_type:()=>q,offset_StgLargeBitmap_bitmap:()=>Z,offset_StgLargeBitmap_size:()=>K,offset_StgMVar_head:()=>se,offset_StgMVar_tail:()=>re,offset_StgMVar_value:()=>ie,offset_StgMutArrPtrs_payload:()=>te,offset_StgMutArrPtrs_ptrs:()=>ee,offset_StgPAP_arity:()=>ne,offset_StgPAP_fun:()=>le,offset_StgPAP_n_args:()=>ae,offset_StgPAP_payload:()=>he,offset_StgRegTable_rCurrentNursery:()=>fe,offset_StgRegTable_rD1:()=>ue,offset_StgRegTable_rF1:()=>me,offset_StgRegTable_rHpAlloc:()=>de,offset_StgRegTable_rR1:()=>ce,offset_StgRegTable_rRet:()=>be,offset_StgRetFun_fun:()=>pe,offset_StgRetFun_payload:()=>_e,offset_StgRetFun_size:()=>ye,offset_StgRetInfoTable_i:()=>we,offset_StgRetInfoTable_srt:()=>Se,offset_StgSelector_selectee:()=>ve,offset_StgSmallMutArrPtrs_payload:()=>Ee,offset_StgSmallMutArrPtrs_ptrs:()=>Be,offset_StgStableName_header:()=>He,offset_StgStableName_sn:()=>Ge,offset_StgStack_sp:()=>Ce,offset_StgStack_stack:()=>We,offset_StgStack_stack_size:()=>Pe,offset_StgTSO_block_info:()=>Ue,offset_StgTSO_id:()=>Ne,offset_StgTSO_stackobj:()=>Oe,offset_StgTSO_what_next:()=>Re,offset_StgTSO_why_blocked:()=>Fe,offset_StgThunkInfoTable_i:()=>Le,offset_StgThunkInfoTable_srt:()=>Me,offset_StgThunk_payload:()=>ke,offset_StgUpdateFrame_updatee:()=>ze,offset_StgWeak_cfinalizers:()=>xe,offset_StgWeak_finalizer:()=>Ve,offset_StgWeak_key:()=>$e,offset_StgWeak_link:()=>je,offset_StgWeak_value:()=>De,offset_bdescr_blocks:()=>T,offset_bdescr_flags:()=>v,offset_bdescr_free:()=>_,offset_bdescr_gen_no:()=>S,offset_bdescr_link:()=>w,offset_bdescr_node:()=>I,offset_bdescr_start:()=>p,offset_first_bdescr:()=>b,offset_first_block:()=>g,offset_stat_dev:()=>Ke,offset_stat_ino:()=>Ze,offset_stat_mode:()=>Ye,offset_stat_mtime:()=>Xe,offset_stat_size:()=>qe,offset_timespec_tv_nsec:()=>f,offset_timespec_tv_sec:()=>m,pageSize:()=>E,sizeof_StgAP:()=>k,sizeof_StgAP_STACK:()=>R,sizeof_StgArrBytes:()=>C,sizeof_StgInd:()=>j,sizeof_StgIndStatic:()=>H,sizeof_StgMutArrPtrs:()=>Q,sizeof_StgPAP:()=>oe,sizeof_StgRetFun:()=>ge,sizeof_StgSelector:()=>Ie,sizeof_StgSmallMutArrPtrs:()=>Te,sizeof_StgStableName:()=>Je,sizeof_StgThunk:()=>Ae,sizeof_bdescr:()=>d,sizeof_first_mblock:()=>y}),function(e,t){if(!e.setImmediate){var s,r,i,o,n,a=1,l={},h=!1,c=e.document,m=Object.getPrototypeOf&&Object.getPrototypeOf(e);m=m&&m.setTimeout?m:e,"[object process]"==={}.toString.call(e.process)?s=function(e){process.nextTick((function(){f(e)}))}:function(){if(e.postMessage&&!e.importScripts){var t=!0,s=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=s,t}}()?(o="setImmediate$"+Math.random()+"$",n=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(o)&&f(+t.data.slice(o.length))},e.addEventListener?e.addEventListener("message",n,!1):e.attachEvent("onmessage",n),s=function(t){e.postMessage(o+t,"*")}):e.MessageChannel?((i=new MessageChannel).port1.onmessage=function(e){f(e.data)},s=function(e){i.port2.postMessage(e)}):c&&"onreadystatechange"in c.createElement("script")?(r=c.documentElement,s=function(e){var t=c.createElement("script");t.onreadystatechange=function(){f(e),t.onreadystatechange=null,r.removeChild(t),t=null},r.appendChild(t)}):s=function(e){setTimeout(f,0,e)},m.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),r=0;r<t.length;r++)t[r]=arguments[r+1];var i={callback:e,args:t};return l[a]=i,s(a),a++},m.clearImmediate=u}function u(e){delete l[e]}function f(e){if(h)setTimeout(f,0,e);else{var t=l[e];if(t){h=!0;try{!function(e){var t=e.callback,s=e.args;switch(s.length){case 0:t();break;case 1:t(s[0]);break;case 2:t(s[0],s[1]);break;case 3:t(s[0],s[1],s[2]);break;default:t.apply(void 0,s)}}(t)}finally{u(e),h=!1}}}}}("undefined"==typeof self?"undefined"==typeof global?void 0:global:self);class r{constructor(e){this.names=e,this.flags=this.names.map((()=>!1)),Object.freeze(this)}enter(e){if(this.flags[e])throw new WebAssembly.RuntimeError(`ReentrancyGuard: ${this.names[e]} reentered!`);this.flags[e]=!0}exit(e){this.flags[e]=!1}}class i{constructor(e,t){this.time=new Date,this.level=e,this.event=t,Object.freeze(this)}}class o{constructor(){this.events=[],this.enabled=!0,this.onEvent=()=>{},Object.seal(this)}isEnabled(){return this.enabled}setEnabled(e){this.enabled=Boolean(e)}log(e,t){if(this.enabled){const s=new i(e,t);this.events.push(s),this.onEvent(s)}}logInfo(e){this.log("INFO",e)}logError(e){this.log("ERROR",e)}logEvent(e){this.log("EVENT",e)}}class n{constructor(e,t){this.logger=e,this.symbolLookupTable={};for(const[e,s]of t.allEntries())this.symbolLookupTable[s]=e;Object.freeze(this)}traceCmm(e){this.logger.logInfo(["call",e,this.symbolLookupTable[e]])}traceCmmBlock(e,t){this.logger.logInfo(["br",e,this.symbolLookupTable[e],t])}traceCmmSetLocal(e,t,s){this.logger.logInfo(["set_local",e,this.symbolLookupTable[e],t,s,this.symbolLookupTable[s]])}}const a=1048576,l=20,h=4096,c=252,m=0,f=8,d=64,b=256,g=16384,y=1032192,p=0,_=8,w=16,S=40,I=44,v=46,T=48,B=4,E=65536,A=24,k=32,L=16,M=20,N=24,O=32,R=32,F=16,U=24,P=32,C=16,W=8,z=0,x=8,$=16,D=0,V=24,j=16,J=8,H=32,G=8,X=8,q=16,Y=20,K=0,Z=8,Q=24,ee=8,te=24,se=8,re=16,ie=24,oe=24,ne=8,ae=12,le=16,he=24,ce=0,me=80,ue=104,fe=888,de=904,be=912,ge=24,ye=8,pe=16,_e=24,we=0,Se=24,Ie=24,ve=16,Te=16,Be=8,Ee=16,Ae=16,ke=16,Le=0,Me=24,Ne=48,Oe=24,Re=32,Fe=34,Ue=40,Pe=8,Ce=16,We=24,ze=8,xe=8,$e=16,De=24,Ve=32,je=40,Je=16,He=0,Ge=8,Xe=88,qe=48,Ye=24,Ke=0,Ze=8,Qe=1,et=0,tt=["JSVal","Bool","Char","Double","Float","Int","Int8","Int16","Int32","Int64","Word","Word8","Word16","Word32","Word64","StablePtr","Ptr","FunPtr"];class st{constructor(e){this.components=e,this.memory=void 0,this.staticMBlocks=void 0,Object.seal(this)}get i8View(){return new Uint8Array(this.memory.buffer)}get dataView(){return new DataView(this.memory.buffer)}init(e,t){this.memory=e,this.staticMBlocks=t}static unDynTag(e){const t=Number(e);return t-(7&t)}static getDynTag(e){return 7&Number(e)}static setDynTag(e,t){const s=Number(e);return s-(7&s)+t}i8Load(e){return this.i8View[e]}i8Store(e,t){this.i8View[e]=Number(t)}i16Load(e){return this.dataView.getUint16(e,!0)}i16Store(e,t){this.dataView.setUint16(e,Number(t),!0)}i32Load(e){return this.dataView.getUint32(e,!0)}i32Store(e,t){this.dataView.setUint32(e,Number(t),!0)}i64Load(e){return this.dataView.getBigUint64(e,!0)}i64Store(e,t){this.dataView.setBigUint64(e,BigInt(t),!0)}f32Load(e){return this.dataView.getFloat32(e,!0)}f32Store(e,t){this.dataView.setFloat32(e,Number(t),!0)}f64Load(e){return this.dataView.getFloat64(e,!0)}f64Store(e,t){this.dataView.setFloat64(e,Number(t),!0)}i32LoadS8(e){return this.dataView.getInt8(e)}i32LoadU8(e){return this.dataView.getUint8(e)}i32LoadS16(e){return this.dataView.getInt16(e,!0)}i32LoadU16(e){return this.dataView.getUint16(e,!0)}i64LoadS8(e){return BigInt(this.dataView.getInt8(e))}i64LoadU8(e){return BigInt(this.dataView.getUint8(e))}i64LoadS16(e){return BigInt(this.dataView.getInt16(e,!0))}i64LoadU16(e){return BigInt(this.dataView.getUint16(e,!0))}heapAlloced(e){return e>=this.staticMBlocks<<l}getMBlocks(e){return function(e){if(!e)throw new WebAssembly.RuntimeError("Allocator returned NULL");return e}(this.components.exports.aligned_alloc(a,a*e))}freeMBlocks(e){this.components.exports.free(e)}expose(e,t,s){return new s(this.memory.buffer,e,t)}strlen(e){return this.components.exports.strlen(e)}strLoad(e){let t=e,s="",r=0;for(;;){let e=this.i8View[t+r];if(0==e)return s;s+=String.fromCharCode(e),r++}}memchr(e,t,s){return this.components.exports.memchr(e,t,s)}memcpy(e,t,s){return this.components.exports.memcpy(e,t,s)}memset(e,t,s,r=1){const i={1:Uint8Array,2:Uint16Array,4:Uint32Array,8:BigUint64Array},o=this.expose(e,s,i[r]);8===r?o.fill(BigInt(t)):o.fill(t)}memsetFloat32(e,t,s){this.expose(e,s,Float32Array).fill(t)}memsetFloat64(e,t,s){this.expose(e,s,Float64Array).fill(t)}}class rt{constructor(e,t,s){this.logger=e,this.symbolLookupTable=new Map;for(const[e,s]of t.allEntries())this.symbolLookupTable.set(s,e);this.memory=s,Object.freeze(this)}trap(e,t){}loadI8(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i8Load(r)}loadI16(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i16Load(r)}loadI32(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i32Load(r)}loadI64(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i64Load(r)}loadI32S8(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i32LoadS8(r)}loadI32U8(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i32LoadU8(r)}loadI32S16(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i32LoadS16(r)}loadI32U16(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i32LoadU16(r)}loadI64S8(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i64LoadS8(r)}loadI64U8(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i64LoadU8(r)}loadI64S16(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i64LoadS16(r)}loadI64U16(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.i64LoadU16(r)}loadF32(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.f32Load(r)}loadF64(e,t,s){const r=Number(t+BigInt(s));return this.trap(e,r),this.memory.f64Load(r)}storeI8(e,t,s,r){const i=Number(t+BigInt(s));this.trap(e,i),this.memory.i8Store(i,r)}storeI16(e,t,s,r){const i=Number(t+BigInt(s));this.trap(e,i),this.memory.i16Store(i,r)}storeI32(e,t,s,r){const i=Number(t+BigInt(s));this.trap(e,i),this.memory.i32Store(i,r)}storeI64(e,t,s,r){const i=Number(t+BigInt(s));this.trap(e,i),this.memory.i64Store(i,r)}storeF32(e,t,s,r){const i=Number(t+BigInt(s));this.trap(e,i),this.memory.f32Store(i,r)}storeF64(e,t,s,r){const i=Number(t+BigInt(s));this.trap(e,i),this.memory.f64Store(i,r)}}class it{constructor(e){this.memory=e,this.currentPools=[void 0,void 0],this.generations=new Array(2),this.mgroups=new Set,Object.freeze(this)}init(){this.setGenerationNo(0),this.currentPools[1]=this.allocMegaGroup(1,!0)}setGenerationNo(e,t=!0){let s=this.generations[e];!t&&s||(s=this.allocMegaGroup(1,!1,e),this.generations[e]=s),this.currentPools[0]=s}hpAlloc(e,t=!1,s=0){const r=e<=y?1:1+Math.ceil((e-y)/a);return this.allocMegaGroup(r,t,s)}allocate(e,t=!1){const s=e<<3;t=t||s>=h;let r=this.currentPools[Number(t)],i=Number(this.memory.i64Load(r+p)),o=Number(this.memory.i64Load(r+_));const n=this.memory.i32Load(r+T),a=o+s;if(a<=i+h*n)this.memory.i64Store(r+_,a);else{if(t)r=this.hpAlloc(s,!0),this.currentPools[1]=r;else{const e=this.memory.i16Load(r+S);r=this.hpAlloc(s,!1,e),this.currentPools[0]=r,this.generations[e]=r}o=Number(this.memory.i64Load(r+_)),this.memory.i64Store(r+_,o+s)}return o}allocatePinned(e){return this.allocate(e,!0)}allocMegaGroup(e,t=!1,s=0){const r=(a*e-g)/h,i=this.memory.getMBlocks(e),o=i+b,n=i+g;return this.memory.i64Store(o+p,n),this.memory.i64Store(o+_,n),this.memory.i64Store(o+w,0),this.memory.i16Store(o+I,e),this.memory.i32Store(o+T,r),this.memory.i16Store(o+v,t?B:0),this.memory.i16Store(o+S,s),this.mgroups.add(o),o}handleLiveness(e,t,s=!0){for(const t of e)if(!this.mgroups.has(t))throw new WebAssembly.RuntimeError(`Invalid live mblock 0x${t.toString(16)}`);for(const e of t){if(!this.mgroups.has(e))throw new WebAssembly.RuntimeError(`Invalid dead mblock 0x${e.toString(16)}`);this.mgroups.delete(e);const t=e-b;this.memory.freeMBlocks(t)}for(const t of Array.from(this.mgroups))if(!e.has(t)){const e=this.memory.i16Load(t+S),r=Boolean(this.memory.i16Load(t+v)&B);if(s||!r&&0==e){this.mgroups.delete(t);const e=t-b,s=this.memory.i16Load(t+I);this.memory.freeMBlocks(e,s)}}this.mgroups.has(this.currentPools[1])||(this.currentPools[1]=this.allocMegaGroup(1,!0));for(let e=0;e<this.generations.length;e++)this.mgroups.has(this.generations[e])||(this.generations[e]=void 0)}liveSize(){let e=0;for(const t of this.mgroups)e+=this.memory.i16Load(t+I);return e}}class ot{constructor(e){this.components=e,this.closure2Val=new Map,Object.seal(this)}newJSValzh(e){const t=this.components.heapAlloc.allocate(1);return this.components.memory.i64Store(t,this.components.symbolTable.addressOf("stg_JSVAL_info")),this.closure2Val.set(t,e),t}getJSValzh(e){if(!this.closure2Val.has(e))throw new WebAssembly.RuntimeError(`Invalid JSVal# 0x${e.toString(16)}`);return this.closure2Val.get(e)}freeJSValzh(e){if(!this.closure2Val.delete(e))throw new WebAssembly.RuntimeError(`Invalid JSVal# 0x${e.toString(16)}`)}}class nt{constructor(){this.spt=new Map,this.last=0,Object.seal(this)}newStablePtr(e){const t=++this.last;return this.spt.set(t,e),t}deRefStablePtr(e){return this.spt.get(e)}freeStablePtr(e){this.spt.delete(e)}hasStablePtr(e){return this.spt.has(e)}}class at{constructor(e,t,s){this.memory=e,this.heapalloc=t,this.ptr2stable=new Map,this.SymbolTable=s,Object.seal(this)}makeStableName(e){const t=this.ptr2stable.get(e);if(void 0!==t)return t;const s=this.ptr2stable.size;let r=this.heapalloc.allocate(Math.ceil(Je/8));return this.memory.i64Store(r,this.SymbolTable.addressOf("stg_STABLE_NAME_info")),this.memory.i64Store(r+Ge,s),this.ptr2stable.set(e,r),r}}const lt=(BigInt(1)<<BigInt(64))-BigInt(1);class ht{constructor(e,t,s){this.memory=e,this.stablePtrManager=t,this.sptEntries=s,Object.freeze(this);for(const[,e]of this.sptEntries)this.stablePtrManager.newStablePtr(e)}hs_spt_lookup(e,t,s,r){return this.sptEntries.get(BigInt(r)<<BigInt(96)|BigInt(s)<<BigInt(64)|BigInt(t)<<BigInt(32)|BigInt(e))||0}hs_spt_key_count(){return this.sptEntries.size}hs_spt_keys(e,t){if(t!==this.hs_spt_key_count())throw new WebAssembly.RuntimeError(`hs_spt_keys required ${t} keys, but there are ${this.hs_spt_key_count()}`);for(const[t]of this.sptEntries)this.memory.i64Store(e,t&lt),this.memory.i64Store(e+8,t>>BigInt(64)),e+=16;return t}}class ct{constructor(e,t,s,r){this.components=e,this.memory=t,this.symbolTable=s,this.lastTid=0,this.tsos=new Map,this.exports=void 0,this.stablePtrManager=r,this.gc=void 0,this.blockingPromise=void 0,Object.seal(this)}setGC(e){this.gc=e}newTSO(){const e=++this.lastTid;let t,s;const r=new Promise(((e,r)=>{t=e,s=r}));return this.tsos.set(e,Object.seal({addr:-1,ret:0,retError:void 0,rstat:-1,ffiRet:void 0,ffiRetType:void 0,ffiRetErr:void 0,returnPromise:r,promise_resolve:t,promise_reject:s})),e}getTSOaddr(e){return this.tsos.get(e).addr}getTSOret(e){return this.tsos.get(e).ret}getTSOrstat(e){return this.tsos.get(e).rstat}setTSOaddr(e,t){this.tsos.get(e).addr=t}setTSOret(e,t){this.tsos.get(e).ret=t}setTSOrstat(e,t){this.tsos.get(e).rstat=t}getTSOid(e){return this.memory.i32Load(e+Ne)}returnFFIPromise(e){this.blockingPromise=e}returnedFromTSO(e){const t=this.tsos.get(e),s=t.addr,r=Number(this.memory.i64Load(this.symbolTable.addressOf("MainCapability")+A+be));switch(r){case 1:this.gc.performGC(),setImmediate((()=>this.tick(e)));break;case 2:{const t=Number(this.memory.i64Load(s+Oe)),r=this.exports.growStack(t);this.memory.i64Store(s+Oe,r),setImmediate((()=>this.tick(e)));break}case 3:setImmediate((()=>this.tick(e)));break;case 4:{const r=Number(this.memory.i16Load(s+Fe));switch(r){case mt.OnCCall:case mt.OnCCall_Interruptible:{const s=this.blockingPromise;this.blockingPromise=void 0,s.then((s=>{const[r,i]=s;t.ffiRet=i,t.ffiRetType=r,setImmediate((()=>this.tick(e)))}),(s=>{t.ffiRetErr=s,setImmediate((()=>this.tick(e)))}));break}case mt.OnDelay:{const t=Number(this.memory.i64Load(s+Ue));new Promise(((e,s)=>{setTimeout((()=>e()),t/1e3)})).then((()=>{setImmediate((()=>this.tick(e)))}),(e=>{throw new WebAssembly.RuntimeError(`Scheduler: blocking TSO Promise rejected with ${e}`)}));break}case mt.OnBlackHole:case mt.OnMVar:case mt.OnMVarRead:break;default:throw new WebAssembly.RuntimeError(`Unhandled thread blocking reason: ${r}`)}break}case 5:switch(Number(this.memory.i16Load(s+Re))){case 1:setImmediate((()=>this.tick(e)));break;case 3:t.ret=0,t.rstat=2,t.promise_reject(t.retError);break;case 4:{const r=Number(this.memory.i64Load(s+Oe)),i=Number(this.memory.i64Load(r+Ce));t.ret=Number(this.memory.i64Load(i+8)),t.rstat=1,t.promise_resolve(e);break}}break;default:throw new WebAssembly.RuntimeError(`returnFFIPromise: unsupported thread stopping reason ${r}`)}}tick(e){this.exports.context.reentrancyGuard.enter(0);try{const t=this.tsos.get(e),s=t.addr;if(t.ffiRetErr){const e=Number(this.memory.i64Load(s+Oe)),r=Number(this.memory.i64Load(e+Ce))-16,i=this.exports.rts_apply(this.symbolTable.addressOf("base_AsteriusziTypesziJSException_mkJSException_closure"),this.exports.rts_mkJSVal(this.components.jsvalManager.newJSValzh(t.ffiRetErr)));this.memory.i64Store(e+Ce,r),this.memory.i64Store(r,this.symbolTable.addressOf("stg_raise_ret_info")),this.memory.i64Store(r+8,i)}else if("number"==typeof t.ffiRetType)switch(t.ffiRetType){case 0:break;case 1:{const e=this.components.jsvalManager.newJSValzh(t.ffiRet);this.memory.i64Store(this.symbolTable.addressOf("MainCapability")+A+ce,e);break}case 2:this.memory.i64Store(this.symbolTable.addressOf("MainCapability")+A+ce,t.ffiRet);break;case 3:this.memory.f32Store(this.symbolTable.addressOf("MainCapability")+A+me,t.ffiRet);break;case 4:this.memory.f64Store(this.symbolTable.addressOf("MainCapability")+A+ue,t.ffiRet);break;default:throw new WebAssembly.RuntimeError(`Unsupported FFI return value type tag ${t.ffiRetType} (more than one value?): ${t.ffiRet}`)}t.ffiRet=void 0,t.ffiRetType=void 0,t.ffiRetErr=void 0;let r=!1;try{this.exports.scheduleTSO(s)}catch(s){r=!0,this.exports.stg_returnToSchedNotPaused(),t.ffiRetErr=s,setImmediate((()=>this.tick(e)))}r||this.returnedFromTSO(e)}finally{this.exports.context.reentrancyGuard.exit(0)}}tsoReportException(e,t){const s=this.components.jsvalManager.getJSValzh(t);this.components.jsvalManager.freeJSValzh(t);const r=this.getTSOid(e);this.tsos.get(r).retError=s}enqueueTSO(e){const t=this.getTSOid(e),s=this.tsos.get(t);-1==s.addr&&(s.addr=Number(e)),setImmediate((()=>this.tick(t)))}submitCmdCreateThread(e,t){const s=this.exports[e](t),r=this.getTSOid(s),i=this.tsos.get(r);return this.enqueueTSO(s),i.returnPromise}}const mt={NotBlocked:0,OnMVar:1,OnMVarRead:14,OnBlackHole:2,OnRead:3,OnWrite:4,OnDelay:5,OnSTM:6,OnDoProc:7,OnCCall:10,OnCCall_Interruptible:11,OnMsgThrowTo:12,ThreadMigrating:13};class ut{constructor(){this.view=new DataView(new ArrayBuffer(8)),Object.freeze(this)}mul2(e,t,s,r,i){this.view.setInt32(0,t,!0),this.view.setInt32(4,e,!0);const o=this.view.getBigUint64(0,!0);this.view.setInt32(0,r,!0),this.view.setInt32(4,s,!0);const n=this.view.getBigUint64(0,!0),a=Number(o*n>>BigInt(32*i)&(BigInt(1)<<BigInt(32))-BigInt(1));return Number(a)}quotrem2_quotient(e,t,s,r,i,o,n){this.view.setInt32(0,t,!0),this.view.setInt32(4,e,!0);const a=this.view.getBigUint64(0,!0);this.view.setInt32(0,r,!0),this.view.setInt32(4,s,!0);const l=this.view.getBigUint64(0,!0),h=a<<BigInt(64)|l;this.view.setInt32(0,o,!0),this.view.setInt32(4,i,!0);const c=this.view.getBigUint64(0,!0),m=Number(h/c>>BigInt(32*n)&(BigInt(1)<<BigInt(32))-BigInt(1));return Number(m)}quotrem2_remainder(e,t,s,r,i,o,n){this.view.setInt32(0,t,!0),this.view.setInt32(4,e,!0);const a=this.view.getBigUint64(0,!0);this.view.setInt32(0,r,!0),this.view.setInt32(4,s,!0);const l=this.view.getBigUint64(0,!0),h=a<<BigInt(64)|l;this.view.setInt32(0,o,!0),this.view.setInt32(4,i,!0);const c=this.view.getBigUint64(0,!0),m=Number(h%c>>BigInt(32*n)&(BigInt(1)<<BigInt(32))-BigInt(1));return Number(m)}}class ft{constructor(e,t){this.memory=e,this.resolution=t.Time.resolution,this.getCPUTime=t.Time.getCPUTime,this.getUnixEpochTime=t.Time.getUnixEpochTime,Object.freeze(this)}getMonotonicNSec(){const e=this.getCPUTime();return 1e9*e[0]+e[1]}clock_getres(e,t){if(t){let e=0,s=this.resolution;s>1e9&&(e=Math.floor(this.resolution/1e9),s=0),this.memory.i64Store(t+m,e),this.memory.i64Store(t+f,s)}return 0}clock_gettime(e,t){if(t){const s=e==Qe?this.getCPUTime():this.getUnixEpochTime();this.memory.i64Store(t+m,s[0]),this.memory.i64Store(t+f,s[1])}return 0}}const dt=27,bt=[0,0,0,0,65,1,65,65,65,194,964,16328,194,66,130,2,451,195,323,67,387,131,259,3,4,5,6,7,8];function gt(e){const t=Number(e);return t-(t&a-1)+b}class yt{constructor(e,t,s,r,i,o,n,a,l,h,c){this.components=e,this.memory=t,this.heapAlloc=s,this.stablePtrManager=r,this.stableNameManager=i,this.scheduler=o,this.infoTables=n,this.symbolTable=a,this.reentrancyGuard=l,this.yolo=h,this.gcThreshold=c,this.nonMovedObjects=new Set,this.nonMovedObjectsToScavenge=[],this.liveMBlocks=new Set,this.blocksToScavenge=[],this.deadMBlocks=new Set,this.liveJSValManager=new ot(e),Object.seal(this)}isPinned(e){const t=gt(e),s=this.memory.i16Load(t+v);return Boolean(s&B)}copyClosure(e,t){const s=this.heapAlloc.allocate(Math.ceil(t/8));this.memory.memcpy(s,e,t);const r=gt(s);return this.liveMBlocks.has(r)||(this.blocksToScavenge.push(r),this.liveMBlocks.add(r)),this.deadMBlocks.add(gt(e)),s}stingyEval(e,t,s,r){switch(t||(t=st.unDynTag(e),(s=Number(this.memory.i64Load(t)))%2==0&&(r=this.memory.i32Load(s+q))),r){case dt:{this.memory.i64Store(t,this.symbolTable.addressOf("stg_WHITEHOLE_info"));const[e,s]=this.stingyEval(Number(this.memory.i64Load(t+J)));return this.memory.i64Store(t,this.symbolTable.addressOf("stg_IND_info")),this.memory.i64Store(t+J,e),[e,dt]}case 22:{this.memory.i64Store(t,this.symbolTable.addressOf("stg_WHITEHOLE_info"));const[i,o]=this.stingyEval(Number(this.memory.i64Load(t+ve)));switch(o){case 1:case 4:case 7:{const r=this.memory.i32Load(s+X),o=this.memory.i64Load(st.unDynTag(i)+(1+r<<3));return this.memory.i64Store(t+J,o),this.stingyEval(e,t,s,dt)}case 2:case 5:{const r=this.memory.i64Load(st.unDynTag(i)+8);return this.memory.i64Store(t+J,r),this.stingyEval(e,t,s,dt)}default:return this.memory.i64Store(t,s),this.memory.i64Store(t+ve,i),[e,r]}}default:return[e,r]}}evacuateClosure(e){const t=st.getDynTag(e),s=st.unDynTag(e),r=Number(this.memory.i64Load(s));if(r%2)return st.setDynTag(r,t);if(this.nonMovedObjects.has(s))return e;if(!this.memory.heapAlloced(s))return this.nonMovedObjects.add(s),this.nonMovedObjectsToScavenge.push(s),e;if(this.isPinned(s))return this.nonMovedObjects.add(s),this.nonMovedObjectsToScavenge.push(s),this.liveMBlocks.add(gt(s)),e;if(this.infoTables&&!this.infoTables.has(r))throw new WebAssembly.RuntimeError(`Invalid info table 0x${r.toString(16)}`);let i,o=this.memory.i32Load(r+q);switch(22!=o&&o!=dt||(o=this.stingyEval(Number(e),s,r,o)[1]),o){case 3:case 10:case 9:case 2:i=this.copyClosure(s,16);break;case 16:case 17:i=this.copyClosure(s,Ae+8);break;case 19:case 18:case 20:i=this.copyClosure(s,Ae+16);break;case 12:case 11:case 13:case 5:case 4:case 6:i=this.copyClosure(s,24);break;case 15:{const e=this.memory.i32Load(r+X),t=this.memory.i32Load(r+X+4);i=this.copyClosure(s,Ae+(e+t<<3));break}case 8:case 1:case 7:case 39:case 40:case 47:case 48:case 49:case 50:case 51:case 38:{const e=this.memory.i32Load(r+X),t=this.memory.i32Load(r+X+4);i=this.copyClosure(s,1+e+t<<3),r===this.symbolTable.addressOf("stg_JSVAL_info")&&this.liveJSValManager.closure2Val.set(i,this.components.jsvalManager.getJSValzh(s));break}case 22:i=this.copyClosure(s,Ie);break;case dt:return i=this.evacuateClosure(this.memory.i64Load(s+J)),this.memory.i64Store(s,st.setDynTag(i,1)),i;case 25:{const e=this.memory.i32Load(s+ae);i=this.copyClosure(s,oe+(e<<3));break}case 24:{const e=this.memory.i32Load(s+M);i=this.copyClosure(s,k+(e<<3));break}case 26:{const e=Number(this.memory.i64Load(s+F));i=this.copyClosure(s,R+(e<<3));break}case 42:i=this.copyClosure(s,8*Math.ceil((C+Number(this.memory.i64Load(s+W)))/8));break;case 43:case 44:case 45:case 46:i=this.copyClosure(s,Q+(Number(this.memory.i64Load(s+ee))<<3));break;case 59:case 60:case 61:case 62:i=this.copyClosure(s,Te+(Number(this.memory.i64Load(s+Be))<<3));break;default:throw new WebAssembly.RuntimeError}return this.memory.i64Store(s,i+1),st.setDynTag(i,t)}scavengeClosureAt(e){this.memory.i64Store(e,this.evacuateClosure(this.memory.i64Load(e)))}scavengePointersFirst(e,t){for(let s=0;s<t;++s)this.scavengeClosureAt(e+(s<<3))}scavengeSmallBitmap(e,t,s){for(let r=0;r<s;++r)1&Number(t>>BigInt(r))||this.scavengeClosureAt(e+(r<<3))}scavengeLargeBitmap(e,t,s){for(let r=0;r<s;r+=64){const i=this.memory.i64Load(t+Z+(r>>3));for(let t=r;t-r<64&&t<s;++t)1&Number(i>>BigInt(t-r))||this.scavengeClosureAt(e+(t<<3))}}scavengePAP(e,t,s,r){this.scavengeClosureAt(e+t);const i=this.memory.i64Load(e+t),o=Number(this.memory.i64Load(st.unDynTag(i)));if(this.infoTables&&!this.infoTables.has(o))throw new WebAssembly.RuntimeError(`Invalid info table 0x${o.toString(16)}`);switch(this.memory.i32Load(o+V+z)){case 0:this.scavengeSmallBitmap(s,this.memory.i64Load(o+V+$)>>BigInt(6),r);break;case 1:this.scavengeLargeBitmap(s,Number(this.memory.i64Load(o+V+$)),r);break;case 2:throw new WebAssembly.RuntimeError;default:this.scavengeSmallBitmap(s,BigInt(bt[this.memory.i32Load(o+V+z)])>>BigInt(6),r)}}scavengeStackChunk(e,t){let s=e;for(;;){if(s>t)throw new WebAssembly.RuntimeError;if(s==t)break;const e=Number(this.memory.i64Load(s)),r=this.memory.i32Load(e+q),i=this.memory.i64Load(e+X);if(this.infoTables&&!this.infoTables.has(e))throw new WebAssembly.RuntimeError(`Invalid info table 0x${e.toString(16)}`);switch(this.memory.i32Load(e+Y)&&this.evacuateClosure(this.memory.i64Load(e+Se)),r){case 30:case 33:case 34:case 35:case 36:case 55:case 56:case 57:{const e=63&Number(i),t=i>>BigInt(6);this.scavengeSmallBitmap(s+8,t,e),s+=1+e<<3;break}case 31:{const e=Number(this.memory.i64Load(Number(i)+K));this.scavengeLargeBitmap(s+8,Number(i),e),s+=1+e<<3;break}case 32:{const e=s,t=Number(this.memory.i64Load(e+ye));this.scavengeClosureAt(e+pe);const r=Number(this.memory.i64Load(e+pe))+0,i=Number(this.memory.i64Load(st.unDynTag(r))),o=this.memory.i32Load(i+V+z),n=e+_e;switch(o){case 0:this.scavengeSmallBitmap(s+_e,this.memory.i64Load(i+V+$)>>BigInt(6),t);break;case 1:this.scavengeLargeBitmap(s+_e,Number(this.memory.i64Load(i+V+$)),t);break;case 2:throw new WebAssembly.RuntimeError;default:{const e=63,t=6,s=bt[o],r=BigInt(s)>>BigInt(t),i=s&e;this.scavengeSmallBitmap(n,r,i);break}}s+=ge+(t<<3);break}default:throw new WebAssembly.RuntimeError}}}scavengeLoop(){const e=this.nonMovedObjectsToScavenge,t=this.blocksToScavenge;let s,r;for(;;){for(s||(s=t.pop(),s&&(r=Number(this.memory.i64Load(s+p))));s&&!(r>=Number(this.memory.i64Load(s+_)));)r+=this.scavengeClosure(r);if(t.length>0)s=r=void 0;else{if(0==e.length)return;for(;e.length>0;)this.scavengeClosure(e.pop())}}}scavengeClosure(e){const t=Number(this.memory.i64Load(e)),s=this.memory.i32Load(t+q);if(this.infoTables&&!this.infoTables.has(t))throw new WebAssembly.RuntimeError(`Invalid info table 0x${t.toString(16)}`);switch(s){case 2:return this.scavengePointersFirst(e+8,1),16;case 3:return 16;case 5:return this.scavengePointersFirst(e+8,1),24;case 4:return this.scavengePointersFirst(e+8,2),24;case 6:return 24;case 8:case 9:case 10:case 11:case 12:case 13:case 14:{this.memory.i32Load(t+Y)&&this.evacuateClosure(this.memory.i64Load(t+V+x));const s=this.memory.i32Load(t+X),r=this.memory.i32Load(t+X+4);return this.scavengePointersFirst(e+8,s),1+s+r<<3}case 1:case 7:case 38:case 47:case 48:case 50:case 51:case 63:{const s=this.memory.i32Load(t+X),r=this.memory.i32Load(t+X+4);return this.scavengePointersFirst(e+8,s),1+s+r<<3}case 21:case 15:case 16:case 17:case 18:case 19:case 20:{this.memory.i32Load(t+Y)&&this.evacuateClosure(this.memory.i64Load(t+Me));const s=this.memory.i32Load(t+X),r=this.memory.i32Load(t+X+4);return this.scavengePointersFirst(e+ke,s),Ae+(s+r<<3)}case 22:return this.memory.i32Load(t+Y)&&this.evacuateClosure(this.memory.i64Load(t+Me)),this.scavengeClosureAt(e+ve),Ie;case 24:{const t=this.memory.i32Load(e+M);return this.scavengePAP(e,N,e+O,t),k+(t<<3)}case 25:{const t=this.memory.i32Load(e+ae);return this.scavengePAP(e,le,e+he,t),oe+(t<<3)}case 26:{const t=Number(this.memory.i64Load(e+F));return this.scavengeClosureAt(e+U),this.scavengeStackChunk(e+P,e+P+t),R+(t<<3)}case 28:return void this.scavengeClosureAt(e+G);case 39:case 40:return this.scavengeClosureAt(e+se),this.scavengeClosureAt(e+re),this.scavengeClosureAt(e+ie),ie+8;case 42:return 8*Math.ceil((C+Number(this.memory.i64Load(e+W)))/8);case 43:case 44:case 45:case 46:{const t=Number(this.memory.i64Load(e+ee));return this.scavengePointersFirst(e+te,t),Q+(t<<3)}case 49:return this.scavengeClosureAt(e+xe),this.scavengeClosureAt(e+$e),this.scavengeClosureAt(e+De),this.scavengeClosureAt(e+Ve),je+8;case 52:return void this.scavengeClosureAt(e+Oe);case 53:{const t=this.memory.i32Load(e+Pe)<<3,s=Number(this.memory.i64Load(e+Ce)),r=e+We+t;return this.scavengeStackChunk(s,r),We+t}case 59:case 60:case 61:case 62:{const t=Number(this.memory.i64Load(e+Be));return this.scavengePointersFirst(e+Ee,t),Ee+(t<<3)}default:throw new WebAssembly.RuntimeError}}updateNursery(){const e=this.symbolTable.addressOf("MainCapability")+A,t=Number(this.memory.i64Load(e+de));this.memory.i64Store(e+de,0),this.memory.i64Store(e+fe,this.heapAlloc.hpAlloc(t))}performGC(){if(this.yolo||this.heapAlloc.liveSize()<this.gcThreshold)return void this.updateNursery();this.reentrancyGuard.enter(1),this.heapAlloc.setGenerationNo(1);for(const[e,t]of this.scheduler.tsos)t.addr=this.evacuateClosure(t.addr);for(const[e,t]of this.stablePtrManager.spt.entries())this.stablePtrManager.spt.set(e,this.evacuateClosure(t));let e=new Map;for(const[t,s]of this.stableNameManager.ptr2stable.entries()){const r=this.evacuateClosure(t),i=this.evacuateClosure(s);e.set(r,i)}this.stableNameManager.ptr2stable=e,this.scavengeLoop();for(const[e,t]of this.scheduler.tsos)if(t.ret){const e=t.addr,s=Number(this.memory.i64Load(e+Oe)),r=Number(this.memory.i64Load(s+Ce));t.ret=Number(this.memory.i64Load(r+8))}this.heapAlloc.handleLiveness(this.liveMBlocks,this.deadMBlocks),this.heapAlloc.setGenerationNo(0),this.updateNursery(),this.components.jsvalManager=this.liveJSValManager,this.nonMovedObjects.clear(),this.liveMBlocks.clear(),this.deadMBlocks.clear(),this.liveJSValManager=new ot(this.components),this.reentrancyGuard.exit(1)}}class pt{constructor(e,t,s,r,i){this.memory=e,this.heapAlloc=t,this.exports=s,this.infoTables=r,this.symbolTable=i,this.decoder=new TextDecoder("utf-8",{fatal:!0}),this.errorBuffer="",Object.seal(this)}raiseExceptionHelper(e,t,s){const r=this.heapAlloc.allocate(Math.ceil(Ae/8)+1);this.memory.i64Store(r,this.symbolTable.addressOf("stg_raise_info")),this.memory.i64Store(r+ke,s);const i=Number(this.memory.i64Load(t+Oe));let o=Number(this.memory.i64Load(i+Ce));for(;;){const e=Number(this.memory.i64Load(o)),s=this.memory.i32Load(e+q),n=this.memory.i64Load(e+X);if(this.infoTables&&!this.infoTables.has(e))throw new WebAssembly.RuntimeError(`Invalid info table 0x${e.toString(16)}`);switch(s){case 33:{const e=Number(this.memory.i64Load(o+ze));this.exports.updateThunk(this.symbolTable.addressOf("MainCapability"),t,e,r),o+=1+Number(n&BigInt(63))<<3;break}case 34:case 36:return this.memory.i64Store(i+Ce,o),s;case 30:o+=1+Number(n&BigInt(63))<<3;break;case 31:o+=1+Number(this.memory.i64Load(Number(n)+K))<<3;break;case 32:{const e=Number(this.memory.i64Load(o+ye));o+=ge+(e<<3);break}default:throw new WebAssembly.RuntimeError(`raiseExceptionHelper: unsupported stack frame ${s} at 0x${o.toString(16)}`)}}}barf(e){if(e){const t=this.memory.i8View.subarray(e),s=t.indexOf(0),r=t.subarray(0,s),i=this.decoder.decode(r);throw new WebAssembly.RuntimeError(`barf: ${i}`)}throw new WebAssembly.RuntimeError("barf")}barf_push(e){this.errorBuffer+=String.fromCodePoint(e)}barf_signal(e){const t=this.errorBuffer;if(this.errorBuffer="",e)throw new WebAssembly.RuntimeError(`barf_signal: ${t}`);console.error(`[DEBUG] ${t}`)}}class _t{constructor(e,t){this.memory=e,this.fs=t,this.encoder=new TextEncoder,Object.freeze(this)}debugBelch2(e,t){const s=`${this.memory.strLoad(t)}\n`;this.fs.writeNonMemory(2,this.encoder.encode(s))}}class wt{constructor(e){this.memory=e,this.FLT_MIN_EXP=-125,this.FLT_MANT_DIG=24,this.DBL_MIN_EXP=-1021,this.DBL_MANT_DIG=53,this.MY_DMINEXP=this.DBL_MIN_EXP-this.DBL_MANT_DIG-1,this.DHIGHBIT=1048576,this.DMSBIT=2147483648,this.MY_FMINEXP=this.FLT_MIN_EXP-this.FLT_MANT_DIG-1,this.FHIGHBIT=8388608,this.FMSBIT=2147483648,this.FLT_HIDDEN=8388608,this.FLT_POWER2=16777216,this.DBL_HIDDEN=1048576,this.DBL_POWER2=2097152,this.LTOP_BIT=2147483648,this.buffer=new ArrayBuffer(8),this.view=new DataView(this.buffer),Object.seal(this)}isFloatNegativeZero(e){return Object.is(-0,e)}isFloatNaN(e){return e!=e}isDoubleNaN(e){return e!=e}isFloatFinite(e){return isFinite(e)}isDoubleFinite(e){return isFinite(e)}isFloatInfinite(e){return!isFinite(e)&&!this.isFloatNaN(e)}isDoubleInfinite(e){return!isFinite(e)&&!this.isDoubleNaN(e)}floatMantissaFromBits(e){return 8388607&e}floatExponentFromBits(e){return(e^this.floatSignFromBits(e)<<31)>>>23&255}floatSignFromBits(e){return e>>>31}doubleMantissaFromBits(e){return e&(BigInt(1)<<BigInt(52))-BigInt(1)}doubleExponentFromBits(e){const t=BigInt(2047);return(e^this.doubleSignFromBits(e)<<BigInt(63))>>BigInt(52)&t}doubleSignFromBits(e){return e>>BigInt(63)}isDoubleDenormalized(e){const t=this.DoubleToIEEE(e),s=this.doubleExponentFromBits(t),r=this.doubleMantissaFromBits(t);return s===BigInt(0)&&r!==BigInt(0)}isFloatDenormalized(e){const t=this.FloatToIEEE(e),s=this.floatExponentFromBits(t),r=this.floatMantissaFromBits(t);return 0===s&&0!==r}isDoubleNegativeZero(e){return Object.is(-0,e)}FloatToIEEE(e){return this.view.setFloat32(0,e),this.view.getUint32(0)}DoubleToIEEE(e){return this.view.setFloat64(0,e),this.view.getBigUint64(0)}DoubleTo2Int(e){return this.view.setFloat64(0,e),[this.view.getUint32(0),this.view.getUint32(4)]}IEEEToFloat(e){return this.view.setInt32(0,e),this.view.getFloat32(0)}IEEEToDouble(e){return this.view.setBigInt64(0,e),this.view.getFloat64(0)}__decodeFloat_Int(e,t,s){let r,i,o,n=this.FloatToIEEE(s);if(0==(n&~this.FMSBIT))r=0,i=0;else{if(i=(n>>>23&255)+this.MY_FMINEXP,this.view.setUint32(0,n),o=this.view.getInt32(0),n&=this.FHIGHBIT-1,i!=this.MY_FMINEXP)n|=this.FHIGHBIT;else for(i+=1;!(n&this.FHIGHBIT);)n<<=1,i-=1;r=n,o<0&&(r=-r)}this.memory.i64Store(e,r),this.memory.i64Store(t,i)}__decodeDouble_2IntJS(e){let t,s,r,i,o;const n=this.DoubleTo2Int(e);let a=n[1],l=n[0],h=0;if(0==a&&0==(l&~this.DMSBIT))r=0,i=0,o=0,s=0;else{if(s=(l>>>20&2047)+this.MY_DMINEXP,this.view.setUint32(0,l),t=this.view.getInt32(0),l&=this.DHIGHBIT-1,s!=this.MY_DMINEXP)l|=this.DHIGHBIT;else for(s++;!(l&this.DHIGHBIT);)l<<=1,a&this.DMSBIT&&l++,a<<=1,s--;h=s,r=a,i=l,o=t<0?-1:1}return[o,i,r,h]}__decodeDouble_2Int(e,t,s,r,i){const[o,n,a,l]=this.__decodeDouble_2IntJS(i);this.memory.dataView.setBigInt64(e,BigInt(o),!0),this.memory.i64Store(t,n),this.memory.i64Store(s,a),this.memory.i64Store(r,l)}decodeDoubleInteger(e){const t=this.__decodeDouble_2IntJS(e),s=t[0],r=t[1],i=t[2],o=t[3];return[BigInt(s)*(BigInt(r)*(BigInt(1)<<BigInt(32))+BigInt(i)),o]}rintFloat(e){const t=this.FloatToIEEE(e);let s=BigInt(this.floatExponentFromBits(t)),r=BigInt(this.floatMantissaFromBits(t)),i=BigInt(this.floatSignFromBits(t));const o=()=>this.IEEEToFloat(Number(i<<BigInt(31)|s<<BigInt(23)|r));if(s>149)return e;if(s<126)return 0;const n=BigInt(1)<<BigInt(149)-s,a=BigInt(2)*n-BigInt(1);let l=r|BigInt(this.FLT_HIDDEN),h=l&a;return l^=h,h<n||h==n&&0==(l&BigInt(2)*n)?0==l?0:(r=l^BigInt(this.FLT_HIDDEN),o()):(l+=BigInt(2)*n,l==this.FLT_POWER2?(r=BigInt(0),s+=BigInt(1),o()):(r=l^BigInt(this.FLT_HIDDEN),o()))}rintDouble(e){const t=this.DoubleToIEEE(e);let s=this.doubleExponentFromBits(t),r=this.doubleMantissaFromBits(t);this.view.setBigUint64(0,r,!0);let i=BigInt(this.view.getUint32(0,!0)),o=BigInt(this.view.getUint32(4,!0)),n=this.doubleSignFromBits(t);const a=()=>{this.view.setInt32(0,Number(i),!0),this.view.setInt32(4,Number(o),!0);const e=this.view.getBigUint64(0,!0),t=n<<BigInt(63)|s<<BigInt(52)|e;return Number(this.IEEEToDouble(t))};if(s>1074)return e;if(s<1022)return 0;if(s<1043){const e=BigInt(1)<<BigInt(1042)-s,t=BigInt(2)*e-BigInt(1);let r=o|BigInt(this.DBL_HIDDEN);const n=r&t;return r^=n,n<e||n==e&&0==i&&0==(r&BigInt(2)*e)?0==r?0:(o=r^BigInt(this.DBL_HIDDEN),i=BigInt(0),a()):(i=BigInt(0),r+=BigInt(2)*e,r==this.DBL_POWER2?(o=BigInt(0),s+=BigInt(1),a()):(o=r^BigInt(this.DBL_HIDDEN),a()))}{const e=BigInt(1)<<BigInt(1074)-s,t=BigInt(2)*e-BigInt(1);let r=i,n=r&t;return r^=n,n<e||n==e&&0==(e==this.LTOP_BIT?1&o:r&2*e)?(i=r,a()):(r+=BigInt(2)*e,i=r,r%(BigInt(1)<<BigInt(32))==0?(r=o+BigInt(1),r==this.DBL_HIDDEN?(o=BigInt(0),s+=BigInt(1),a()):(u.ieee.mantissa0=r,a())):a())}}}const St=Uint32Array.of(0,32,33,36,37,40,41,42,43,44,45,46,48,58,60,63,65,91,92,93,94,95,96,97,123,124,125,126,127,160,161,162,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,184,185,186,187,188,191,192,215,216,223,224,247,248,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,428,429,430,431,432,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,570,571,572,573,574,575,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,600,601,602,603,604,605,608,609,610,611,612,613,614,615,616,617,618,619,620,621,623,624,625,626,627,629,630,637,638,640,641,642,643,644,647,648,649,650,652,653,658,659,660,661,669,670,671,688,706,710,722,736,741,748,749,750,751,768,837,838,880,881,882,883,884,885,886,887,890,891,894,895,900,902,903,904,908,910,912,913,940,941,944,945,962,963,972,973,975,976,977,978,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1ee3,8008,8016,8017,8018,8019,8020,8021,8022,8023,8025,8032,8040,8048,8050,8054,8056,8058,8060,8064,8072,8080,8088,8096,8104,8112,8114,8115,8116,8120,8122,8124,8125,8126,8127,8130,8131,8132,8136,8140,8141,8144,8146,8152,8154,8157,8160,8162,8165,8166,8168,8170,8172,8173,8178,8179,8180,8184,8186,8188,8189,8192,8203,8208,8214,8216,8217,8218,8219,8221,8222,8223,8224,8232,8233,8234,8239,8240,8249,8250,8251,8255,8257,8260,8261,8262,8263,8274,8275,8276,8277,8287,8288,8304,8305,8308,8314,8317,8318,8319,8320,8330,8333,8334,8336,8352,8400,8413,8417,8418,8421,8448,8450,8451,8455,8456,8458,8459,8462,8464,8467,8468,8469,8470,8472,8473,8478,8484,8485,8486,8487,8488,8489,8490,8491,8492,8494,8495,8496,8498,8499,8500,8501,8505,8506,8508,8510,8512,8517,8518,8522,8523,8524,8526,8527,8528,8544,8560,8576,8579,8580,8581,8585,8586,8592,8597,8602,8604,8608,8609,8611,8612,8614,8615,8622,8623,8654,8656,8658,8659,8660,8661,8692,8960,8968,8969,8970,8971,8972,8992,8994,9001,9002,9003,9084,9085,9115,9140,9180,9186,9312,9372,9398,9424,9450,9472,9655,9656,9665,9666,9720,9728,9839,9840,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10102,10132,10176,10181,10182,10183,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10240,10496,10627,10628,10629,10630,10631,10632,10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648,10649,10712,10713,10714,10715,10716,10748,10749,10750,11008,11056,11077,11079,11085,11264,11312,11360,11361,11362,11363,11364,11365,11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,11378,11379,11380,11381,11382,11383,11388,11390,11392,11393,11394,11395,11396,11397,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410,11411,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425,11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441,11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457,11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,11470,11471,11472,11473,11474,11475,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486,11487,11488,11489,11490,11491,11492,11493,11499,11500,11501,11502,11503,11506,11507,11513,11517,11518,11520,11568,11631,11632,11647,11648,11744,11776,11778,11779,11780,11781,11782,11785,11786,11787,11788,11789,11790,11799,11800,11802,11803,11804,11805,11806,11808,11809,11810,11811,11812,11813,11814,11815,11816,11817,11818,11823,11824,11834,11836,11840,11841,11842,11843,11904,12288,12289,12292,12293,12294,12295,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,12306,12308,12309,12310,12311,12312,12313,12314,12315,12316,12317,12318,12320,12321,12330,12334,12336,12337,12342,12344,12347,12348,12349,12350,12353,12441,12443,12445,12447,12448,12449,12539,12540,12543,12688,12690,12694,12704,12736,12784,12800,12832,12842,12872,12880,12881,12896,12928,12938,12977,12992,13312,19904,19968,40981,40982,42128,42192,42232,42238,42240,42508,42509,42512,42528,42538,42560,42561,42562,42563,42564,42565,42566,42567,42568,42569,42570,42571,42572,42573,42574,42575,42576,42577,42578,42579,42580,42581,42582,42583,42584,42585,42586,42587,42588,42589,42590,42591,42592,42593,42594,42595,42596,42597,42598,42599,42600,42601,42602,42603,42604,42605,42606,42607,42608,42611,42612,42622,42623,42624,42625,42626,42627,42628,42629,42630,42631,42632,42633,42634,42635,42636,42637,42638,42639,42640,42641,42642,42643,42644,42645,42646,42647,42648,42649,42650,42651,42652,42654,42656,42726,42736,42738,42752,42775,42784,42786,42787,42788,42789,42790,42791,42792,42793,42794,42795,42796,42797,42798,42799,42800,42802,42803,42804,42805,42806,42807,42808,42809,42810,42811,42812,42813,42814,42815,42816,42817,42818,42819,42820,42821,42822,42823,42824,42825,42826,42827,42828,42829,42830,42831,42832,42833,42834,42835,42836,42837,42838,42839,42840,42841,42842,42843,42844,42845,42846,42847,42848,42849,42850,42851,42852,42853,42854,42855,42856,42857,42858,42859,42860,42861,42862,42863,42864,42865,42873,42874,42875,42876,42877,42878,42879,42880,42881,42882,42883,42884,42885,42886,42887,42888,42889,42891,42892,42893,42894,42895,42896,42897,42898,42899,42900,42901,42902,42903,42904,42905,42906,42907,42908,42909,42910,42911,42912,42913,42914,42915,42916,42917,42918,42919,42920,42921,42922,42923,42924,42925,42926,42927,42928,42929,42930,42931,42932,42933,42934,42935,42936,42937,42938,42939,42940,42941,42942,42943,42946,42947,42948,42949,42950,42999,43e3,43002,43003,43010,43011,43014,43015,43019,43020,43043,43045,43047,43048,43056,43062,43064,43065,43072,43124,43136,43138,43188,43204,43214,43216,43232,43250,43256,43259,43260,43261,43263,43264,43274,43302,43310,43312,43335,43346,43359,43360,43392,43395,43396,43443,43444,43446,43450,43452,43453,43457,43471,43472,43486,43488,43493,43494,43495,43504,43514,43561,43567,43569,43571,43573,43584,43587,43588,43596,43597,43600,43612,43616,43632,43633,43639,43642,43643,43644,43645,43646,43696,43697,43698,43701,43703,43705,43710,43712,43713,43714,43741,43742,43744,43755,43756,43758,43760,43762,43763,43765,43766,43777,43824,43859,43860,43867,43868,43872,43888,43968,44003,44005,44006,44008,44009,44011,44012,44013,44016,44032,64256,64285,64286,64287,64297,64298,64434,64467,64830,64831,64848,65020,65021,65024,65040,65047,65048,65049,65056,65072,65073,65075,65077,65078,65079,65080,65081,65082,65083,65084,65085,65086,65087,65088,65089,65090,65091,65092,65093,65095,65096,65097,65101,65104,65112,65113,65114,65115,65116,65117,65118,65119,65122,65123,65124,65128,65129,65130,65136,65279,65281,65284,65285,65288,65289,65290,65291,65292,65293,65294,65296,65306,65308,65311,65313,65339,65340,65341,65342,65343,65344,65345,65371,65372,65373,65374,65375,65376,65377,65378,65379,65380,65382,65392,65393,65438,65440,65504,65506,65507,65508,65509,65512,65513,65517,65529,65532,65536,65792,65799,65847,65856,65909,65913,65930,65932,66045,66176,66272,66273,66304,66336,66349,66369,66370,66378,66384,66422,66432,66463,66464,66512,66513,66560,66600,66640,66720,66736,66776,66816,66927,67072,67671,67672,67680,67703,67705,67712,67751,67808,67835,67840,67862,67871,67872,67903,67968,68028,68030,68032,68096,68097,68112,68152,68160,68176,68192,68221,68223,68224,68253,68288,68296,68297,68325,68331,68336,68352,68409,68416,68440,68448,68472,68480,68505,68521,68608,68736,68800,68858,68864,68900,68912,69216,69376,69405,69415,69446,69457,69461,69600,69632,69633,69634,69635,69688,69703,69714,69734,69759,69762,69763,69808,69811,69815,69817,69819,69821,69822,69837,69840,69872,69888,69891,69927,69932,69933,69942,69952,69956,69957,69968,70003,70004,70006,70016,70018,70019,70067,70070,70079,70081,70085,70089,70093,70096,70106,70107,70108,70109,70113,70144,70188,70191,70194,70196,70197,70198,70200,70206,70272,70313,70320,70367,70368,70371,70384,70400,70402,70405,70459,70461,70462,70464,70465,70480,70487,70493,70498,70502,70656,70709,70712,70720,70722,70725,70726,70727,70731,70736,70747,70750,70751,70832,70835,70841,70842,70843,70847,70849,70850,70852,70854,70855,70864,71040,71087,71090,71096,71100,71102,71103,71105,71128,71132,71168,71216,71219,71227,71229,71230,71231,71233,71236,71248,71264,71296,71339,71340,71341,71342,71344,71350,71351,71352,71360,71424,71453,71456,71458,71462,71463,71472,71482,71484,71487,71680,71724,71727,71736,71737,71739,71840,71872,71904,71914,71935,72145,72146,72147,72148,72156,72160,72161,72164,72192,72193,72203,72243,72249,72250,72251,72255,72263,72272,72273,72279,72281,72284,72330,72343,72344,72346,72349,72350,72384,72751,72752,72766,72767,72768,72769,72784,72794,72816,72818,72850,72873,72874,72881,72882,72884,72885,72960,73009,73030,73031,73040,73056,73098,73104,73107,73109,73110,73111,73112,73120,73440,73459,73461,73463,73664,73685,73693,73697,73727,73728,74752,74864,74880,78896,82944,92768,92782,92880,92912,92917,92928,92976,92983,92988,92992,92996,92997,93008,93019,93027,93760,93792,93824,93847,93952,94031,94032,94033,94095,94099,94178,94179,94208,113820,113821,113823,113824,118784,119141,119143,119146,119149,119155,119163,119171,119173,119180,119210,119214,119362,119365,119520,119552,119648,119808,119834,119860,119886,119912,119938,119964,119990,120016,120042,120068,120094,120120,120146,120172,120198,120224,120250,120276,120302,120328,120354,120380,120406,120432,120458,120488,120513,120514,120539,120540,120546,120571,120572,120597,120598,120604,120629,120630,120655,120656,120662,120687,120688,120713,120714,120720,120745,120746,120771,120772,120778,120779,120782,120832,121344,121399,121403,121453,121461,121462,121476,121477,121479,121499,123136,123184,123191,123200,123214,123628,123632,123647,124928,125127,125136,125184,125218,125252,125264,125278,126065,126124,126125,126128,126129,126254,126255,126464,126704,126976,127232,127248,127995,128e3,131072,917505,917760),It=Uint32Array.of(31,32,35,36,39,40,41,42,43,44,45,47,57,59,62,64,90,91,92,93,94,95,96,122,123,124,125,126,159,160,161,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,183,184,185,186,187,190,191,214,215,222,223,246,247,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,428,429,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,569,570,571,572,573,574,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,600,601,602,603,604,607,608,609,610,611,612,613,614,615,616,617,618,619,620,622,623,624,625,626,628,629,636,637,639,640,641,642,643,646,647,648,649,651,652,657,658,659,660,668,669,670,687,705,709,721,735,740,747,748,749,750,767,836,837,879,880,881,882,883,884,885,886,887,890,893,894,895,901,902,903,906,908,911,912,939,940,943,944,961,962,971,972,974,975,976,977,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1023,1039,1071,1103,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1159,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1366,1369,1375,1376,1414,1416,1417,1418,1422,1423,1469,1470,1471,1472,1474,1475,1477,1478,1479,1522,1524,1541,1544,1546,1547,1549,1551,1562,1563,1564,1567,1599,1600,1610,1631,1641,1645,1647,1648,1747,1748,1749,1756,1757,1758,1764,1766,1768,1769,1773,1775,1785,1788,1790,1791,1805,1807,1808,1809,1839,1866,1957,1968,1969,1993,2026,2035,2037,2038,2041,2042,2045,2047,2069,2073,2074,2083,2084,2087,2088,2093,2110,2136,2139,2142,2237,2273,2274,2306,2307,2361,2362,2363,2364,2365,2368,2376,2380,2381,2383,2384,2391,2401,2403,2405,2415,2416,2417,2432,2433,2435,2489,2492,2493,2496,2500,2508,2509,2510,2519,2529,2531,2543,2545,2547,2553,2554,2555,2556,2557,2562,2563,2617,2620,2624,2641,2654,2671,2673,2676,2677,2678,2690,2691,2745,2748,2749,2752,2760,2764,2765,2785,2787,2799,2800,2801,2809,2817,2819,2873,2876,2877,2878,2879,2880,2884,2892,2902,2903,2913,2915,2927,2928,2929,2935,2946,3001,3007,3008,3020,3021,3024,3031,3055,3058,3064,3065,3066,3072,3075,3076,3133,3136,3140,3158,3169,3171,3183,3191,3198,3199,3200,3201,3203,3204,3257,3260,3261,3262,3263,3268,3270,3275,3277,3286,3297,3299,3311,3314,3329,3331,3386,3388,3389,3392,3396,3404,3405,3406,3407,3414,3415,3422,3425,3427,3439,3448,3449,3455,3459,3526,3530,3537,3542,3551,3567,3571,3572,3632,3633,3635,3642,3647,3653,3654,3662,3663,3673,3675,3760,3761,3763,3772,3780,3782,3789,3801,3840,3843,3858,3859,3860,3863,3865,3871,3881,3891,3892,3893,3894,3895,3896,3897,3898,3899,3900,3901,3903,3948,3966,3967,3972,3973,3975,3980,4028,4037,4038,4047,4052,4056,4058,4138,4140,4144,4145,4151,4152,4154,4156,4158,4159,4169,4175,4181,4183,4185,4189,4192,4193,4196,4198,4205,4208,4212,4225,4226,4228,4230,4236,4237,4238,4239,4249,4252,4253,4255,4301,4346,4347,4348,4351,4954,4959,4968,4988,5007,5017,5103,5109,5117,5120,5740,5742,5759,5760,5786,5787,5788,5866,5869,5872,5905,5908,5937,5940,5942,5969,5971,6e3,6003,6067,6069,6070,6077,6085,6086,6088,6099,6102,6103,6106,6107,6108,6109,6121,6137,6149,6150,6154,6157,6158,6169,6210,6211,6276,6278,6312,6313,6430,6434,6438,6440,6449,6450,6456,6459,6464,6469,6479,6601,6617,6618,6655,6678,6680,6682,6683,6687,6740,6741,6742,6743,6752,6753,6754,6756,6764,6770,6783,6809,6822,6823,6829,6845,6846,6915,6916,6963,6964,6965,6970,6971,6972,6977,6978,6980,6987,7001,7008,7018,7027,7036,7041,7042,7072,7073,7077,7079,7081,7082,7085,7087,7097,7141,7142,7143,7145,7148,7149,7150,7153,7155,7167,7203,7211,7219,7221,7223,7231,7241,7247,7257,7287,7293,7295,7296,7297,7298,7300,7301,7302,7303,7304,7359,7367,7378,7379,7392,7393,7400,7404,7405,7411,7412,7414,7415,7417,7418,7467,7530,7543,7544,7545,7548,7549,7565,7566,7578,7615,7679,7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690,7691,7692,7693,7694,7695,7696,7697,7698,7699,7700,7701,7702,7703,7704,7705,7706,7707,7708,7709,7710,7711,7712,7713,7714,7715,7716,7717,7718,7719,7720,7721,7722,7723,7724,7725,7726,7727,7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7740,7741,7742,7743,7744,7745,7746,7747,7748,7749,7750,7751,7752,7753,7754,7755,7756,7757,7758,7759,7760,7761,7762,7763,7764,7765,7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,7777,7778,7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,7792,7793,7794,7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805,7806,7807,7808,7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824,7825,7826,7827,7828,7829,7834,7835,7837,7838,7839,7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,7856,7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,7888,7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904,7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,7920,7921,7922,7923,7924,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,7943,7951,7957,7965,7975,7983,7991,7999,8005,8013,8016,8017,8018,8019,8020,8021,8022,8023,8031,8039,8047,8049,8053,8055,8057,8059,8061,8071,8079,8087,8095,8103,8111,8113,8114,8115,8119,8121,8123,8124,8125,8126,8129,8130,8131,8135,8139,8140,8143,8145,8151,8153,8155,8159,8161,8164,8165,8167,8169,8171,8172,8175,8178,8179,8183,8185,8187,8188,8190,8202,8207,8213,8215,8216,8217,8218,8220,8221,8222,8223,8231,8232,8233,8238,8239,8248,8249,8250,8254,8256,8259,8260,8261,8262,8273,8274,8275,8276,8286,8287,8303,8304,8305,8313,8316,8317,8318,8319,8329,8332,8333,8334,8348,8383,8412,8416,8417,8420,8432,8449,8450,8454,8455,8457,8458,8461,8463,8466,8467,8468,8469,8471,8472,8477,8483,8484,8485,8486,8487,8488,8489,8490,8491,8493,8494,8495,8497,8498,8499,8500,8504,8505,8507,8509,8511,8516,8517,8521,8522,8523,8525,8526,8527,8543,8559,8575,8578,8579,8580,8584,8585,8587,8596,8601,8603,8607,8608,8610,8611,8613,8614,8621,8622,8653,8655,8657,8658,8659,8660,8691,8959,8967,8968,8969,8970,8971,8991,8993,9e3,9001,9002,9083,9084,9114,9139,9179,9185,9290,9371,9397,9423,9449,9471,9654,9655,9664,9665,9719,9727,9838,9839,10087,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10131,10175,10180,10181,10182,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10239,10495,10626,10627,10628,10629,10630,10631,10632,10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648,10711,10712,10713,10714,10715,10747,10748,10749,11007,11055,11076,11078,11084,11263,11310,11358,11360,11361,11362,11363,11364,11365,11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,11378,11379,11380,11381,11382,11387,11389,11391,11392,11393,11394,11395,11396,11397,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410,11411,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425,11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441,11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457,11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,11470,11471,11472,11473,11474,11475,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486,11487,11488,11489,11490,11491,11492,11498,11499,11500,11501,11502,11505,11506,11507,11516,11517,11519,11565,11623,11631,11632,11647,11742,11775,11777,11778,11779,11780,11781,11784,11785,11786,11787,11788,11789,11798,11799,11801,11802,11803,11804,11805,11807,11808,11809,11810,11811,11812,11813,11814,11815,11816,11817,11822,11823,11833,11835,11839,11840,11841,11842,11855,12283,12288,12291,12292,12293,12294,12295,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,12307,12308,12309,12310,12311,12312,12313,12314,12315,12316,12317,12319,12320,12329,12333,12335,12336,12341,12343,12346,12347,12348,12349,12351,12438,12442,12444,12446,12447,12448,12538,12539,12542,12686,12689,12693,12703,12730,12771,12799,12830,12841,12871,12879,12880,12895,12927,12937,12976,12991,13311,19893,19967,40980,40981,42124,42182,42231,42237,42239,42507,42508,42511,42527,42537,42539,42560,42561,42562,42563,42564,42565,42566,42567,42568,42569,42570,42571,42572,42573,42574,42575,42576,42577,42578,42579,42580,42581,42582,42583,42584,42585,42586,42587,42588,42589,42590,42591,42592,42593,42594,42595,42596,42597,42598,42599,42600,42601,42602,42603,42604,42605,42606,42607,42610,42611,42621,42622,42623,42624,42625,42626,42627,42628,42629,42630,42631,42632,42633,42634,42635,42636,42637,42638,42639,42640,42641,42642,42643,42644,42645,42646,42647,42648,42649,42650,42651,42653,42655,42725,42735,42737,42743,42774,42783,42785,42786,42787,42788,42789,42790,42791,42792,42793,42794,42795,42796,42797,42798,42799,42801,42802,42803,42804,42805,42806,42807,42808,42809,42810,42811,42812,42813,42814,42815,42816,42817,42818,42819,42820,42821,42822,42823,42824,42825,42826,42827,42828,42829,42830,42831,42832,42833,42834,42835,42836,42837,42838,42839,42840,42841,42842,42843,42844,42845,42846,42847,42848,42849,42850,42851,42852,42853,42854,42855,42856,42857,42858,42859,42860,42861,42862,42863,42864,42872,42873,42874,42875,42876,42877,42878,42879,42880,42881,42882,42883,42884,42885,42886,42887,42888,42890,42891,42892,42893,42894,42895,42896,42897,42898,42899,42900,42901,42902,42903,42904,42905,42906,42907,42908,42909,42910,42911,42912,42913,42914,42915,42916,42917,42918,42919,42920,42921,42922,42923,42924,42925,42926,42927,42928,42929,42930,42931,42932,42933,42934,42935,42936,42937,42938,42939,42940,42941,42942,42943,42946,42947,42948,42949,42950,42999,43001,43002,43009,43010,43013,43014,43018,43019,43042,43044,43046,43047,43051,43061,43063,43064,43065,43123,43127,43137,43187,43203,43205,43215,43225,43249,43255,43258,43259,43260,43262,43263,43273,43301,43309,43311,43334,43345,43347,43359,43388,43394,43395,43442,43443,43445,43449,43451,43452,43456,43469,43471,43481,43487,43492,43493,43494,43503,43513,43560,43566,43568,43570,43572,43574,43586,43587,43595,43596,43597,43609,43615,43631,43632,43638,43641,43642,43643,43644,43645,43695,43696,43697,43700,43702,43704,43709,43711,43712,43713,43740,43741,43743,43754,43755,43757,43759,43761,43762,43764,43765,43766,43822,43858,43859,43866,43867,43871,43879,43967,44002,44004,44005,44007,44008,44010,44011,44012,44013,44025,64217,64279,64285,64286,64296,64297,64433,64449,64829,64830,64831,65019,65020,65021,65039,65046,65047,65048,65049,65071,65072,65074,65076,65077,65078,65079,65080,65081,65082,65083,65084,65085,65086,65087,65088,65089,65090,65091,65092,65094,65095,65096,65100,65103,65111,65112,65113,65114,65115,65116,65117,65118,65121,65122,65123,65126,65128,65129,65131,65276,65279,65283,65284,65287,65288,65289,65290,65291,65292,65293,65295,65305,65307,65310,65312,65338,65339,65340,65341,65342,65343,65344,65370,65371,65372,65373,65374,65375,65376,65377,65378,65379,65381,65391,65392,65437,65439,65500,65505,65506,65507,65508,65510,65512,65516,65518,65531,65533,65786,65794,65843,65855,65908,65912,65929,65931,66044,66045,66256,66272,66299,66335,66339,66368,66369,66377,66378,66421,66426,66461,66463,66511,66512,66517,66599,66639,66717,66729,66771,66811,66915,66927,67669,67671,67679,67702,67704,67711,67742,67759,67829,67839,67861,67867,67871,67897,67903,68023,68029,68031,68095,68096,68111,68149,68159,68168,68184,68220,68222,68223,68252,68255,68295,68296,68324,68326,68335,68342,68405,68415,68437,68447,68466,68479,68497,68508,68527,68680,68786,68850,68863,68899,68903,68921,69246,69404,69414,69445,69456,69460,69465,69622,69632,69633,69634,69687,69702,69709,69733,69743,69761,69762,69807,69810,69814,69816,69818,69820,69821,69825,69837,69864,69881,69890,69926,69931,69932,69940,69951,69955,69956,69958,70002,70003,70005,70006,70017,70018,70066,70069,70078,70080,70084,70088,70092,70093,70105,70106,70107,70108,70111,70132,70187,70190,70193,70195,70196,70197,70199,70205,70206,70312,70313,70366,70367,70370,70378,70393,70401,70403,70457,70460,70461,70463,70464,70477,70480,70487,70497,70499,70516,70708,70711,70719,70721,70724,70725,70726,70730,70735,70745,70749,70750,70831,70834,70840,70841,70842,70846,70848,70849,70851,70853,70854,70855,70873,71086,71089,71093,71099,71101,71102,71104,71127,71131,71133,71215,71218,71226,71228,71229,71230,71232,71235,71236,71257,71276,71338,71339,71340,71341,71343,71349,71350,71351,71352,71369,71450,71455,71457,71461,71462,71467,71481,71483,71486,71487,71723,71726,71735,71736,71738,71739,71871,71903,71913,71922,72144,72145,72146,72147,72155,72159,72160,72163,72164,72192,72202,72242,72248,72249,72250,72254,72262,72263,72272,72278,72280,72283,72329,72342,72343,72345,72348,72349,72354,72750,72751,72765,72766,72767,72768,72773,72793,72812,72817,72847,72871,72873,72880,72881,72883,72884,72886,73008,73029,73030,73031,73049,73097,73102,73105,73108,73109,73110,73111,73112,73129,73458,73460,73462,73464,73684,73692,73696,73713,73727,74649,74862,74868,78894,78904,92766,92777,92783,92909,92916,92917,92975,92982,92987,92991,92995,92996,92997,93017,93025,93071,93791,93823,93846,93850,94026,94031,94032,94087,94098,94177,94178,94179,113817,113820,113822,113823,113827,119140,119142,119145,119148,119154,119162,119170,119172,119179,119209,119213,119361,119364,119365,119539,119638,119672,119833,119859,119885,119911,119937,119963,119989,120015,120041,120067,120092,120119,120144,120171,120197,120223,120249,120275,120301,120327,120353,120379,120405,120431,120457,120485,120512,120513,120538,120539,120545,120570,120571,120596,120597,120603,120628,120629,120654,120655,120661,120686,120687,120712,120713,120719,120744,120745,120770,120771,120777,120778,120779,120831,121343,121398,121402,121452,121460,121461,121475,121476,121478,121483,122922,123180,123190,123197,123209,123627,123631,123641,123647,125124,125135,125142,125217,125251,125258,125273,125279,126123,126124,126127,126128,126253,126254,126269,126651,126705,127221,127244,127994,127999,129685,195101,917631,917999),vt=Uint8Array.of(0,1,2,3,2,4,5,2,6,2,7,2,8,2,6,2,9,4,2,5,10,11,10,12,4,6,5,6,0,1,2,3,13,2,10,13,14,15,6,16,13,10,13,6,17,10,18,2,10,17,14,19,17,2,9,6,9,20,12,6,12,21,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,24,25,22,23,22,23,22,23,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,26,22,23,22,23,22,23,27,28,29,22,23,22,23,30,22,23,31,22,23,20,32,33,34,22,23,31,35,36,37,38,22,23,39,20,37,40,41,42,22,23,22,23,22,23,43,22,23,43,20,22,23,43,22,23,44,22,23,22,23,45,22,23,20,14,22,23,20,46,14,47,48,49,47,48,49,47,48,49,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,50,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,47,48,49,22,23,51,52,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,53,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,54,22,23,55,56,57,22,23,58,59,60,22,23,22,23,22,23,22,23,22,23,61,62,63,64,65,20,66,20,67,20,68,69,20,66,70,20,71,20,72,73,20,74,75,73,76,77,20,75,20,78,79,20,80,20,81,20,82,20,83,82,20,84,82,85,86,87,20,88,20,14,20,89,90,20,91,10,91,10,91,10,91,10,91,10,92,93,92,22,23,22,23,91,10,22,23,91,41,2,94,10,95,2,96,97,98,20,9,99,100,20,12,101,12,102,103,104,105,106,107,108,109,110,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,111,112,113,114,115,116,6,22,23,117,22,23,20,53,118,9,12,112,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,13,92,119,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,120,22,23,22,23,22,23,22,23,22,23,22,23,22,23,121,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,122,91,2,20,123,20,2,7,13,3,92,7,92,2,92,2,92,2,92,14,2,16,6,2,3,2,13,92,2,16,2,14,91,14,92,8,2,14,92,14,2,14,92,16,13,92,91,92,13,92,14,8,14,13,14,2,16,14,92,14,92,14,92,14,8,14,92,91,13,2,91,92,3,14,92,91,92,91,92,91,92,2,14,92,2,14,92,16,92,124,14,92,124,92,14,124,92,124,92,124,14,92,14,92,2,8,2,91,14,92,124,14,92,14,124,92,124,92,14,124,14,92,8,14,3,17,13,3,14,2,92,124,14,92,124,92,14,8,92,14,92,2,92,124,14,92,14,124,92,124,92,14,92,8,2,3,14,92,124,14,92,14,124,92,124,92,124,92,124,14,92,8,13,14,17,92,14,124,92,124,92,14,124,8,17,13,3,13,92,124,92,14,92,124,92,14,92,8,2,17,13,14,92,124,2,14,92,14,124,92,124,92,124,92,124,14,92,8,14,92,124,14,92,14,124,92,124,92,14,13,14,124,17,14,92,8,17,13,14,124,14,92,124,92,124,8,124,2,14,92,14,92,3,14,91,92,2,8,2,14,92,14,92,14,91,92,8,14,13,2,13,2,13,92,13,8,17,13,92,13,92,13,92,4,5,4,5,124,14,92,124,92,2,92,14,92,13,92,13,2,13,2,14,124,92,124,92,124,92,124,92,14,8,2,14,124,92,14,92,14,124,14,124,14,92,14,92,124,92,124,92,14,124,8,124,92,13,125,126,2,91,126,14,92,2,17,14,13,127,104,110,7,14,2,14,1,14,4,5,14,2,128,14,92,14,92,2,14,92,14,92,14,92,124,92,124,92,124,92,2,91,2,3,14,92,8,17,2,7,2,92,16,8,14,91,14,92,14,92,14,92,124,92,124,92,124,92,13,2,8,14,8,17,13,14,92,124,92,2,14,124,92,124,92,124,92,124,92,124,92,8,2,91,2,92,119,92,124,14,92,124,92,124,92,124,92,124,14,8,2,13,92,13,92,124,14,124,92,124,92,124,92,14,8,14,92,124,92,124,92,124,92,124,2,14,124,92,124,92,2,8,14,8,14,91,2,129,130,131,132,133,134,135,136,137,2,92,2,92,124,92,14,92,14,92,14,124,92,14,20,91,20,91,138,20,139,20,140,20,91,92,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,141,20,142,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,143,144,143,144,143,144,143,144,143,144,20,143,20,143,20,143,20,143,144,143,144,145,146,147,148,149,150,143,151,143,151,143,151,143,20,152,20,144,153,154,10,155,10,20,152,20,156,154,10,143,20,144,157,10,143,20,113,20,144,158,117,10,20,152,20,159,160,154,10,1,16,7,2,15,19,4,15,19,4,15,2,161,162,16,1,2,15,19,2,11,2,6,4,5,2,6,2,11,2,1,16,17,91,17,6,4,5,91,17,6,4,5,91,3,92,119,92,119,92,13,107,13,107,13,20,107,20,107,20,13,107,13,6,107,13,107,13,163,13,107,13,164,165,107,13,20,107,166,107,20,14,20,13,20,107,6,107,20,13,6,13,167,13,17,168,169,128,22,23,128,17,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,4,5,4,5,13,6,13,4,5,13,6,13,6,13,6,13,17,13,170,171,17,13,6,13,6,13,6,13,6,13,4,5,4,5,4,5,4,5,4,5,4,5,4,5,17,13,6,4,5,6,4,5,4,5,4,5,4,5,4,5,6,13,6,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,6,4,5,4,5,6,4,5,6,13,6,13,6,13,122,123,22,23,172,173,174,175,176,22,23,22,23,22,23,177,178,179,180,20,22,23,20,22,23,20,91,181,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,13,22,23,22,23,92,22,23,2,17,2,182,14,91,2,92,14,92,2,15,19,15,19,2,15,19,2,15,19,2,7,2,7,2,15,19,2,15,19,4,5,4,5,4,5,4,5,2,91,2,7,2,7,2,4,2,13,1,2,13,91,14,128,4,5,4,5,4,5,4,5,4,5,13,4,5,4,5,4,5,4,5,7,4,5,13,128,92,124,7,91,13,128,91,14,2,13,14,92,10,91,14,7,14,2,91,14,13,17,13,14,13,14,13,17,13,17,13,17,13,17,13,17,13,14,13,14,91,14,13,14,91,2,14,91,2,14,8,14,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,14,92,119,2,92,2,91,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,91,92,14,128,92,2,10,91,10,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,91,20,22,23,22,23,183,22,23,22,23,22,23,22,23,22,23,91,10,22,23,184,20,14,22,23,22,23,185,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,186,187,188,189,186,20,190,191,192,193,22,23,22,23,22,23,22,23,22,23,22,23,22,23,194,195,196,14,91,20,14,92,14,92,14,92,14,124,92,124,13,17,13,3,13,14,2,124,14,124,92,2,8,92,14,2,14,2,14,92,8,14,92,2,14,92,124,2,14,92,124,14,92,124,92,124,92,124,2,91,8,2,14,92,91,14,8,14,92,124,92,124,92,14,92,14,92,124,8,2,14,91,14,13,14,124,92,124,14,92,14,92,14,92,14,92,14,92,14,91,2,14,124,92,124,2,14,91,124,92,14,20,197,20,10,91,20,198,14,124,92,124,92,124,2,124,92,8,14,20,14,92,14,6,14,10,14,5,4,14,3,13,92,2,4,5,2,92,2,7,11,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,2,4,5,2,11,2,7,4,5,4,5,4,5,2,6,7,6,2,3,2,14,16,2,3,2,4,5,2,6,2,7,2,8,2,6,2,9,4,2,5,10,11,10,12,4,6,5,6,4,5,2,4,5,2,14,91,14,91,14,3,6,10,13,3,13,6,13,16,13,14,2,17,13,128,17,13,17,13,92,14,92,17,14,17,14,128,14,128,14,92,14,2,14,2,128,199,200,14,8,199,200,14,2,14,2,17,14,13,17,14,17,14,17,14,17,2,14,2,14,17,14,17,14,92,14,92,17,2,14,17,2,14,17,14,13,14,92,17,2,14,2,14,17,14,17,14,2,17,14,97,102,17,14,92,8,17,14,17,14,92,17,2,14,124,92,124,14,92,2,17,8,92,124,14,124,92,124,92,2,16,2,16,14,8,92,14,92,124,92,8,2,14,124,14,92,2,14,92,124,14,124,92,124,14,2,92,2,8,14,2,14,2,17,14,124,92,124,92,124,92,2,92,14,2,14,92,124,92,8,92,124,14,92,14,124,92,124,14,124,14,124,92,14,124,92,124,92,124,92,14,2,8,2,92,14,124,92,124,92,124,92,124,92,14,2,14,8,14,124,92,124,92,124,92,2,14,92,14,124,92,124,92,124,92,2,14,8,2,14,92,124,92,124,92,124,92,14,8,14,92,124,92,124,92,8,17,2,13,14,124,92,124,92,2,9,12,8,17,14,124,92,124,92,124,92,14,124,14,92,14,92,124,14,92,2,92,14,92,124,92,14,92,124,92,2,14,2,14,124,92,124,92,14,2,8,17,2,14,92,124,92,124,92,124,92,14,92,14,92,8,14,124,92,124,92,124,92,14,8,14,92,124,2,17,13,3,13,2,14,128,2,14,16,14,8,2,14,92,2,14,92,2,13,91,2,13,8,17,14,9,12,17,2,14,92,14,124,92,91,2,91,14,13,92,2,16,13,124,92,13,124,16,92,13,92,13,92,13,92,13,17,13,17,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,6,20,6,20,107,6,20,6,20,107,6,20,6,20,107,6,20,6,20,107,6,20,6,20,107,20,8,13,92,13,92,13,92,13,92,13,2,92,14,92,91,8,14,92,8,3,14,17,92,201,202,92,8,2,17,13,17,3,17,13,17,14,6,13,17,13,10,13,14,16,92),Tt=Uint8Array.of(25,22,17,19,13,14,18,12,8,0,20,11,1,21,4,15,26,10,1,16,1,1,0,1,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,2,1,1,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,5,5,0,0,0,0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,0,0,7,0,1,0,1,6,0,1,0,9,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,2,1,0,2,1,0,0,0,0,0,23,24,0,0,0,0,1,9,9,21,21,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1),Bt=Int32Array.of(0,0,0,0,0,0,0,0,0,0,0,0,-32,0,0,0,0,0,743,0,0,121,0,-1,0,-232,0,-300,195,0,0,0,0,0,0,0,97,0,0,163,0,130,0,0,0,0,56,0,-1,-2,-79,0,0,0,0,0,0,10815,0,0,0,10783,10780,10782,-210,-206,-205,-202,-203,42319,42315,-207,42280,42308,-209,-211,10743,42305,10749,-213,-214,10727,-218,42307,42282,-69,-217,-71,-219,42261,42258,0,0,84,0,0,0,0,0,-38,-37,-31,-64,-63,0,-62,-57,0,-47,-54,-8,-86,-80,7,-116,0,-96,0,0,0,0,-15,0,-48,0,0,3008,0,0,-6254,-6253,-6244,-6242,-6243,-6236,-6181,35266,0,35332,3814,35384,-59,0,8,0,74,86,100,128,112,126,0,9,0,0,-7205,0,0,0,0,0,0,0,0,0,0,0,-28,0,-16,0,-26,0,0,0,-10795,-10792,0,0,0,0,0,-7264,0,0,48,0,0,0,0,0,0,0,0,0,0,0,-928,-38864,0,-40,0,-34),Et=Int32Array.of(0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-199,0,-121,0,0,210,206,205,79,202,203,207,0,211,209,0,213,0,214,218,217,219,0,2,1,0,0,-97,-56,-130,10795,-163,10792,0,-195,69,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,38,37,64,63,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,-60,0,-7,80,0,15,0,48,0,0,7264,0,38864,0,0,0,0,0,0,0,0,0,-3008,0,0,0,0,-7615,0,-8,0,0,0,0,0,0,-8,0,-74,-9,0,-86,-100,-112,-128,-126,0,0,-7517,-8383,-8262,28,0,16,0,26,0,-10743,-3814,-10727,0,0,-10780,-10749,-10783,-10782,-10815,0,-35332,-42280,0,-42308,-42319,-42315,-42305,-42258,-42282,-42261,928,-48,-42307,-35384,0,0,40,0,34,0),At=Int32Array.of(0,0,0,0,0,0,0,0,0,0,0,0,-32,0,0,0,0,0,743,0,0,121,0,-1,0,-232,0,-300,195,0,0,0,0,0,0,0,97,0,0,163,0,130,0,0,0,0,56,1,0,-1,-79,0,0,0,0,0,0,10815,0,0,0,10783,10780,10782,-210,-206,-205,-202,-203,42319,42315,-207,42280,42308,-209,-211,10743,42305,10749,-213,-214,10727,-218,42307,42282,-69,-217,-71,-219,42261,42258,0,0,84,0,0,0,0,0,-38,-37,-31,-64,-63,0,-62,-57,0,-47,-54,-8,-86,-80,7,-116,0,-96,0,0,0,0,-15,0,-48,0,0,0,0,0,-6254,-6253,-6244,-6242,-6243,-6236,-6181,35266,0,35332,3814,35384,-59,0,8,0,74,86,100,128,112,126,0,9,0,0,-7205,0,0,0,0,0,0,0,0,0,0,0,-28,0,-16,0,-26,0,0,0,-10795,-10792,0,0,0,0,0,-7264,0,0,48,0,0,0,0,0,0,0,0,0,0,0,-928,-38864,0,-40,0,-34);function kt(e,t,s){const r=t+1==s,i=~~((t+s)/2);return e<St[i]?r?-1:kt(e,t,i):e<=It[i]?i:r?-1:kt(e,i,s)}function Lt(e,t){const s=kt(t,0,t+1);return-1==s?0:e[vt[s]]}class Mt{constructor(e){Object.seal(this)}u_gencat(e){return Lt(Tt,e)}u_iswupper(e){return!!(1<<this.u_gencat(e)&5)}u_iswlower(e){return!!(1<<this.u_gencat(e)&2)}u_iswspace(e){return!!(1<<this.u_gencat(e)&4194304)}u_iswalpha(e){return!!(1<<this.u_gencat(e)&31)}u_iswdigit(e){return!!(1<<this.u_gencat(e)&256)}u_iswalnum(e){return!!(1<<this.u_gencat(e)&1823)}u_iswprint(e){return!!(1<<this.u_gencat(e)&8388607)}u_iswcntrl(e){return!!(1<<this.u_gencat(e)&33554432)}u_towlower(e){return e+Lt(Et,e)}u_towupper(e){return e+Lt(Bt,e)}u_towtitle(e){return e+Lt(At,e)}}function Nt(e,t){const s=[];for(;t;){const r=(31&t)-1;if(!e[r])throw new WebAssembly.RuntimeError(`decodeTys: unsupported tag ${t}`);s.push(e[r]),t>>>=5}return s}class Ot{constructor(e,t,s,r,i,o){this.context=Object.freeze({components:e,memory:t,reentrancyGuard:s,symbolTable:r,scheduler:i,stablePtrManager:o,callbackStablePtrs:new Map,rtsMkFuncs:tt.map((e=>function(e,t){switch(t){case"JSVal":return t=>e.rts_mkJSVal(e.context.components.jsvalManager.newJSValzh(t));default:{const s=`rts_mk${t}`;return t=>e[s](t)}}}(this,e))),rtsGetFuncs:tt.map((e=>function(e,t){switch(t){case"JSVal":return t=>e.context.components.jsvalManager.getJSValzh(e.rts_getJSVal(t));default:{const s=`rts_get${t}`;return t=>e[s](t)}}}(this,e)))})}rts_evalIO(e){return this.context.scheduler.submitCmdCreateThread("createStrictIOThread",e)}rts_evalLazyIO(e){return this.context.scheduler.submitCmdCreateThread("createIOThread",e)}newHaskellCallback(e,t,s,r,i){const o=Nt(this.context.rtsMkFuncs,t),n=Nt(this.context.rtsGetFuncs,s),a=this.context.symbolTable.addressOf(r?"base_AsteriusziTopHandler_runIO_closure":"base_AsteriusziTopHandler_runNonIO_closure"),l=n.length?e=>this.rts_evalIO(e):e=>this.rts_evalLazyIO(e);if(n.length>1)throw new WebAssembly.RuntimeError("Multiple returns not supported");const h=async(...t)=>{try{if(t.length<o.length)throw new WebAssembly.RuntimeError(`Expected ${o.length} arguments, got ${t.length}`);let s=this.context.stablePtrManager.deRefStablePtr(e);for(let e=0;e<o.length;++e)s=this.rts_apply(s,o[e](t[e]));s=this.rts_apply(a,s);const r=await l(s);if(n.length)return n[0](this.context.scheduler.getTSOret(r))}finally{i()}};return this.context.callbackStablePtrs.set(h,e),h}freeHaskellCallback(e){const t=this.context.components.jsvalManager.getJSValzh(e);this.context.stablePtrManager.freeStablePtr(this.context.callbackStablePtrs.get(t)),this.context.callbackStablePtrs.delete(t),this.context.components.jsvalManager.freeJSValzh(e)}}class Rt{constructor(e,t){this.flush=e,this.consoleHistory=t,this.history="",this.buffer="",this.decoder=new TextDecoder("utf-8",{fatal:!0}),Object.seal(this)}read(){const e=this.history;return this.history="",e}write(e){const t="string"==typeof e?e:this.decoder.decode(e,{stream:!0});this.consoleHistory&&(this.history+=t),this.buffer+=t;const s=this.buffer.split("\n");this.buffer=s.pop();for(const e of s)this.flush(e);return e.length}}class Ft{constructor(e){this.components=e,this.stdout=new Rt(console.log,!0),this.stderr=new Rt(console.error,!0)}read(e,t,s){throw new WebAssembly.RuntimeError(`Attempting to read(${e}, ${t}, ${s})`)}write(e,t,s){switch(t=this.components.memory.expose(t,s,Uint8Array),e){case 1:return this.stdout.write(t);case 2:return this.stderr.write(t);default:throw new WebAssembly.RuntimeError(`Attempting to write(${e}, ${t}, ${s})`)}}writeNonMemory(e,t){switch(e){case 1:this.stdout.write(t);break;case 2:this.stderr.write(t);break;default:throw new WebAssembly.RuntimeError(`writeNonMemory(${e}, ${t})`)}}history(e){switch(e){case 1:return this.stdout.read();case 2:return this.stderr.read();default:throw new WebAssembly.RuntimeError(`Attempting to get history of ${e}`)}}}class Ut{constructor(e,t,s,r){this.symbolTable=new Map;for(const[t,r]of Object.entries(e))this.symbolTable.set(t,s+r);for(const[e,s]of Object.entries(t))this.symbolTable.set(e,r+s);Object.freeze(this)}addressOf(e){if(!this.symbolTable.has(e))throw new WebAssembly.RuntimeError(`${e} not in symbol table`);return this.symbolTable.get(e)}allEntries(){return this.symbolTable}}class Pt{constructor(){}get wasiImport(){return s(this)}initialize(){}args_get(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: args_get(${e})`)}args_sizes_get(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: args_sizes_get(${e})`)}environ_get(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: environ_get(${e})`)}environ_sizes_get(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: environ_sizes_get(${e})`)}clock_res_get(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: clock_res_get(${e})`)}clock_time_get(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: clock_time_get(${e})`)}fd_advise(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_advise(${e})`)}fd_allocate(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_allocate(${e})`)}fd_close(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_close(${e})`)}fd_datasync(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_datasync(${e})`)}fd_fdstat_get(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_fdstat_get(${e})`)}fd_fdstat_set_flags(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_fdstat_set_flags(${e})`)}fd_fdstat_set_rights(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_fdstat_set_rights(${e})`)}fd_filestat_get(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_filestat_get(${e})`)}fd_filestat_set_size(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_filestat_set_size(${e})`)}fd_filestat_set_times(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_filestat_set_times(${e})`)}fd_pread(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_pread(${e})`)}fd_prestat_get(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_prestat_get(${e})`)}fd_prestat_dir_name(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_prestat_dir_name(${e})`)}fd_pwrite(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_pwrite(${e})`)}fd_read(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_read(${e})`)}fd_readdir(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_readdir(${e})`)}fd_renumber(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_renumber(${e})`)}fd_seek(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_seek(${e})`)}fd_sync(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_sync(${e})`)}fd_tell(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_tell(${e})`)}fd_write(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: fd_write(${e})`)}path_create_directory(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: path_create_directory(${e})`)}path_filestat_get(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: path_filestat_get(${e})`)}path_filestat_set_times(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: path_filestat_set_times(${e})`)}path_link(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: path_link(${e})`)}path_open(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: path_open(${e})`)}path_readlink(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: path_readlink(${e})`)}path_remove_directory(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: path_remove_directory(${e})`)}path_rename(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: path_rename(${e})`)}path_symlink(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: path_symlink(${e})`)}path_unlink_file(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: path_unlink_file(${e})`)}poll_oneoff(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: poll_oneoff(${e})`)}proc_exit(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: proc_exit(${e})`)}proc_raise(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: proc_raise(${e})`)}sched_yield(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: sched_yield(${e})`)}random_get(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: random_get(${e})`)}sock_recv(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: sock_recv(${e})`)}sock_send(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: sock_send(${e})`)}sock_shutdown(...e){throw new WebAssembly.RuntimeError(`Unsupported wasi syscall: sock_shutdown(${e})`)}}const Ct=WebAssembly.compileStreaming(fetch("wasm-game-of-life.wasm")),Wt={Time:{getCPUTime:()=>{const e=performance.now(),t=Math.floor(e/1e3);return[t,1e6*Math.floor(e-1e3*t)]},getUnixEpochTime:()=>{const e=Date.now(),t=Math.floor(e/1e3);return[t,1e6*Math.floor(e-1e3*t)]},resolution:1e6},posix:class{constructor(e,t){this.memory=e,Object.seal(this)}getProgArgv(e,t){this.memory.i64Store(e,1)}get_errno(){throw WebAssembly.RuntimeError("Unsupported rts interface: get_errno")}set_errno(){throw WebAssembly.RuntimeError("Unsupported rts interface: set_errno")}open(){throw WebAssembly.RuntimeError("Unsupported rts interface: open")}close(){throw WebAssembly.RuntimeError("Unsupported rts interface: close")}ftruncate(){throw WebAssembly.RuntimeError("Unsupported rts interface: ftruncate")}stat(){throw WebAssembly.RuntimeError("Unsupported rts interface: stat")}fstat(){throw WebAssembly.RuntimeError("Unsupported rts interface: fstat")}opendir(){throw WebAssembly.RuntimeError("Unsupported rts interface: opendir")}readdir(){throw WebAssembly.RuntimeError("Unsupported rts interface: readdir")}closedir(){throw WebAssembly.RuntimeError("Unsupported rts interface: closedir")}getenv(){throw WebAssembly.RuntimeError("Unsupported rts interface: getenv")}access(){throw WebAssembly.RuntimeError("Unsupported rts interface: access")}getcwd(){throw WebAssembly.RuntimeError("Unsupported rts interface: getcwd")}}},zt={progName:"wasm-game-of-life",jsffiFactory:e=>({jsffi:{__asterius_jsffi_basezuAsteriusziTypesziJSException_a8Zfo:t=>(t=e.getJSValzh(t),e.newJSValzh(t.stack?t.stack:`${t}`)),__asterius_jsffi_basezuAsteriusziTypesziJSString_a8VRX:t=>(t=e.getJSValzh(t),e.newJSValzh(t[0])),__asterius_jsffi_basezuAsteriusziTypesziJSString_a8VS6:(t,s)=>(t=e.getJSValzh(t))[0]+=String.fromCodePoint(s),__asterius_jsffi_basezuAsteriusziTypesziJSString_a8VSb:()=>e.newJSValzh([""]),__asterius_jsffi_basezuAsteriusziTypesziJSString_a8VSi:t=>(t=e.getJSValzh(t),(()=>{const e=t.next();return e.done?0:1+e.value.codePointAt(0)})()),__asterius_jsffi_basezuAsteriusziTypesziJSString_a8VSq:t=>(t=e.getJSValzh(t),e.newJSValzh(t[Symbol.iterator]())),__asterius_jsffi_basezuAsteriusziTypesziJSVal_a8U2a:t=>e.freeJSValzh(t)}}),exportsStaticOffsets:[["getHeight",141040,0,6,!1],["getWidth",141392,0,6,!1],["randomUniverse",141912,0,1,!0],["tickUniverse",141248,1,1,!1],["toggleCell",141376,1222,1,!1],["main",140440,0,0,!0]],functionsOffsetTable:Object.freeze({}),staticsOffsetTable:Object.freeze({MainCapability:0,base_AsteriusziTypesziJSException_mkJSException_closure:111800,stg_IND_info:137640,stg_WHITEHOLE_info:137384,stg_raise_ret_info:137080,base_AsteriusziTopHandler_runIO_closure:92672,base_AsteriusziTopHandler_runNonIO_closure:92768,stg_JSVAL_info:126424,stg_raise_info:137104,stg_STABLE_NAME_info:139248}),sptOffsetEntries:new Map([]),tableSlots:3618,staticBytes:141936,yolo:!1,pic:!1,defaultTableBase:1024,defaultMemoryBase:1024,consoleHistory:!1,gcThreshold:640,targetSpecificModule:Wt},xt=new class{constructor(){this.fps=document.getElementById("fps"),this.frames=[],this.lastFrameTimeStamp=performance.now()}render(){const e=performance.now(),t=e-this.lastFrameTimeStamp;this.lastFrameTimeStamp=e;const s=1/t*1e3;this.frames.push(s),this.frames.length>100&&this.frames.shift();let r=1/0,i=-1/0,o=0;for(let e=0;e<this.frames.length;e++)o+=this.frames[e],r=Math.min(this.frames[e],r),i=Math.max(this.frames[e],i);let n=o/this.frames.length;this.fps.textContent=`\nFrames per Second:\n         latest = ${Math.round(s)}\navg of last 100 = ${Math.round(n)}\nmin of last 100 = ${Math.round(r)}\nmax of last 100 = ${Math.round(i)}\n`.trim()}};Ct.then((async function(e){const i=await async function(e){const i={};let l=new WebAssembly.Global({value:"i32",mutable:!1},e.defaultTableBase),h=new WebAssembly.Global({value:"i32",mutable:!1},e.defaultMemoryBase),c=e.persistentState?e.persistentState:{},m=new Ut(e.functionsOffsetTable,e.staticsOffsetTable,l.value,h.value),u=function(e){const t=new Map;for(const[s,r]of e.entries())t.set(s,h.value+r);return t}(e.sptOffsetEntries),f=function(e){if("undefined"!=typeof offset_info_table){const t=new Set;for(const s of e.keys())t.add(h.value+s);return t}}(e.offsetInfoTables),d=new r(["Scheduler","GC"]),b=new Ft(i),g=new o,y=new n(g,m),p=Math.ceil((h.value+e.staticBytes)/a),_=new st(i),w=new rt(g,m,_),S=new it(_),I=new ot(i),v=new nt,T=new at(_,S,m),B=new ht(_,v,u),E=new ct(i,_,m,v),A=new ut,k=new ft(_,e.targetSpecificModule),L=new yt(i,_,S,v,T,E,f,m,d,e.yolo,e.gcThreshold),M=new wt(_),N=new _t(_,b),O=new Mt,R=new Ot(i,_,d,m,E,v),F=new pt(_,S,R,f,m);const U=new Pt(e.progName);E.exports=R,i.memory=_,i.exports=R,i.heapAlloc=S,i.symbolTable=m,i.jsvalManager=I;const P={exposeMemory:(e,t,s=Uint8Array)=>_.expose(e,t,s),newJSValzh:e=>i.jsvalManager.newJSValzh(e),getJSValzh:e=>i.jsvalManager.getJSValzh(e),freeJSValzh:e=>i.jsvalManager.freeJSValzh(e),fs:b,stdio:{stdout:()=>b.history(1),stderr:()=>b.history(2)},returnFFIPromise:e=>E.returnFFIPromise(e)},C=Object.assign(e.jsffiFactory(P),{wasi_snapshot_preview1:U.wasiImport,env:{__memory_base:h,__table_base:l},rts:{printI64:e=>b.writeNonMemory(1,`${function(e){return`0x${e.toString(16).padStart(8,"0")}`}(e)}\n`),assertEqI64:function(e,t){if(e!=t)throw new WebAssembly.RuntimeError(`unequal I64: ${e}, ${t}`)},print:e=>b.writeNonMemory(1,`${e}\n`)},fs:{read:(e,t,s)=>b.read(e,t,s),write:(e,t,s)=>b.write(e,t,s)},posix:s(new e.targetSpecificModule.posix(_,t)),time:s(k),floatCBits:s(M),GC:s(L),ExceptionHelper:s(F),HeapAlloc:s(S),Integer:s(A),Memory:s(_),MemoryTrap:s(w),Messages:s(N),StablePtr:s(v),StableName:s(T),StaticPtr:s(B),Unicode:s(O),Tracing:s(y),Exports:{newHaskellCallback:(e,t,s,r,o)=>{let n=[],a=R.newHaskellCallback(e,t,s,r,o?()=>R.freeHaskellCallback(n[0]):()=>{});return n[0]=i.jsvalManager.newJSValzh(a),n[0]},freeHaskellCallback:e=>R.freeHaskellCallback(e)},Scheduler:s(E)});return WebAssembly.instantiate(e.module,C).then((t=>{e.pic&&t.exports.__wasm_apply_relocs(),U.initialize(t),Object.assign(R,t.exports),_.init(t.exports.memory,p),S.init(),E.setGC(L);for(const[t,s,r,i,o]of e.exportsStaticOffsets)R[t]=R.newHaskellCallback(v.newStablePtr(h.value+s),r,i,o,(()=>{}));return R.hs_init(),Object.assign(P,{exports:R,symbolTable:m,persistentState:c})}))}(Object.assign(zt,{module:e}));let l=await i.exports.randomUniverse();const h=await i.exports.getHeight(),c=await i.exports.getWidth(),m=document.getElementById("game-of-life-canvas");m.height=8*h+1,m.width=8*c+1;const u=m.getContext("2d"),f=()=>{u.beginPath(),u.strokeStyle="#CCCCCC";for(let e=0;e<=c;e++)u.moveTo(8*e+1,0),u.lineTo(8*e+1,8*h+1);for(let e=0;e<=h;e++)u.moveTo(0,8*e+1),u.lineTo(8*c+1,8*e+1);u.stroke()},d=()=>{u.beginPath();for(let e=0;e<h;e++)for(let t=0;t<c;t++){const s=e*c+t;u.fillStyle="0"===l[s]?"#FFFFFF":"#000000",u.fillRect(8*t+1,8*e+1,7,7)}u.stroke()};m.addEventListener("click",(async e=>{if(!g){const t=m.getBoundingClientRect(),s=m.width/t.width,r=m.height/t.height,o=(e.clientX-t.left)*s,n=(e.clientY-t.top)*r,a=Math.min(Math.floor(n/8),h-1),u=Math.min(Math.floor(o/8),c-1);l=await i.exports.toggleCell(a,u,l),f(),d()}}));const b=async()=>{l=await i.exports.tickUniverse(l),f(),d(),g&&(xt.render(),requestAnimationFrame(b))};let g=!0;const y=()=>{p.textContent="⏸",g=!0,f(),d(),requestAnimationFrame(b)},p=document.getElementById("play-pause");p.addEventListener("click",(e=>{g?(p.textContent="▶️",g=!1):y()})),y()}))})();